||fork||=> merge config from /home/test/code/VMamba-main/classification/configs/vssm/vmambav2_tiny_224.yaml
RANK and WORLD_SIZE in environ: 0/1
/tmp/vssm1_tiny_0230/20240528042246
[2024-05-28 04:22:47 vssm1_tiny_0230](inference_lhk.py 387): INFO Full config saved to /tmp/vssm1_tiny_0230/20240528042246/config.json
[2024-05-28 04:22:47 vssm1_tiny_0230](inference_lhk.py 390): INFO AMP_ENABLE: true
AMP_OPT_LEVEL: ''
AUG:
  AUTO_AUGMENT: rand-m9-mstd0.5-inc1
  COLOR_JITTER: 0.4
  CUTMIX: 1.0
  CUTMIX_MINMAX: null
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RECOUNT: 1
  REMODE: pixel
  REPROB: 0.25
BASE:
- ''
DATA:
  BATCH_SIZE: 128
  CACHE_MODE: part
  DATASET: imagenet
  DATA_PATH: /mnt/hdd/Datasets/imagenet/
  IMG_SIZE: 224
  INTERPOLATION: bicubic
  MASK_PATCH_SIZE: 32
  MASK_RATIO: 0.6
  NUM_WORKERS: 8
  PIN_MEMORY: true
  ZIP_MODE: false
ENABLE_AMP: false
EVAL_MODE: false
FUSED_LAYERNORM: false
MODEL:
  DROP_PATH_RATE: 0.2
  DROP_RATE: 0.0
  LABEL_SMOOTHING: 0.1
  MMCKPT: false
  NAME: vssm1_tiny_0230
  NUM_CLASSES: 1000
  PRETRAINED: /home/test/code/VMamba-main/vssm_tiny_0230_ckpt_epoch_262.pth
  RESUME: ''
  TYPE: vssm
  VSSM:
    DEPTHS:
    - 2
    - 2
    - 5
    - 2
    DOWNSAMPLE: v3
    EMBED_DIM: 96
    GMLP: false
    IN_CHANS: 3
    MLP_ACT_LAYER: gelu
    MLP_DROP_RATE: 0.0
    MLP_RATIO: 4.0
    NORM_LAYER: ln2d
    PATCHEMBED: v2
    PATCH_NORM: true
    PATCH_SIZE: 4
    POSEMBED: false
    SSM_ACT_LAYER: silu
    SSM_CONV: 3
    SSM_CONV_BIAS: false
    SSM_DROP_RATE: 0.0
    SSM_DT_RANK: auto
    SSM_D_STATE: 1
    SSM_FORWARDTYPE: v05_noz
    SSM_INIT: v0
    SSM_RANK_RATIO: 2.0
    SSM_RATIO: 2.0
OUTPUT: /tmp/vssm1_tiny_0230/20240528042246
PRINT_FREQ: 10
SAVE_FREQ: 1
SEED: 0
TAG: '20240528042246'
TEST:
  CROP: true
  SEQUENTIAL: false
  SHUFFLE: false
THROUGHPUT_MODE: false
TRAIN:
  ACCUMULATION_STEPS: 1
  AUTO_RESUME: true
  BASE_LR: 0.000125
  CLIP_GRAD: 5.0
  EPOCHS: 300
  LAYER_DECAY: 1.0
  LR_SCHEDULER:
    DECAY_EPOCHS: 30
    DECAY_RATE: 0.1
    GAMMA: 0.1
    MULTISTEPS: []
    NAME: cosine
    WARMUP_PREFIX: true
  MIN_LR: 1.25e-06
  MOE:
    SAVE_MASTER: false
  OPTIMIZER:
    BETAS:
    - 0.9
    - 0.999
    EPS: 1.0e-08
    MOMENTUM: 0.9
    NAME: adamw
  START_EPOCH: 0
  USE_CHECKPOINT: false
  WARMUP_EPOCHS: 20
  WARMUP_LR: 1.25e-07
  WEIGHT_DECAY: 0.05
TRAINCOST_MODE: false

[2024-05-28 04:22:47 vssm1_tiny_0230](inference_lhk.py 391): INFO {"cfg": "/home/test/code/VMamba-main/classification/configs/vssm/vmambav2_tiny_224.yaml", "opts": null, "batch_size": 128, "data_path": "/mnt/hdd/Datasets/imagenet/", "zip": false, "cache_mode": "part", "pretrained": "/home/test/code/VMamba-main/vssm_tiny_0230_ckpt_epoch_262.pth", "resume": null, "accumulation_steps": null, "use_checkpoint": false, "disable_amp": false, "output": "/tmp", "tag": "20240528042246", "eval": false, "throughput": false, "fused_layernorm": false, "optim": null, "model_ema": true, "model_ema_decay": 0.9999, "model_ema_force_cpu": false, "memory_limit_rate": -1, "convert_to_onnx": true, "eval_onnx": true}
rank 0 successfully build train dataset
rank 0 successfully build val dataset
[2024-05-28 04:22:50 vssm1_tiny_0230](utils.py 60): INFO ==============> Loading weight /home/test/code/VMamba-main/vssm_tiny_0230_ckpt_epoch_262.pth for fine-tuning......
[2024-05-28 04:22:50 vssm1_tiny_0230](utils.py 65): WARNING <All keys matched successfully>
[2024-05-28 04:22:50 vssm1_tiny_0230](utils.py 66): INFO => loaded 'model' successfully from '/home/test/code/VMamba-main/vssm_tiny_0230_ckpt_epoch_262.pth'
finish load model
/home/test/code/VMamba-main/classification/models/csm_triton.py:167: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:167: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:167: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:167: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:167: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
/home/test/code/VMamba-main/classification/models/csm_triton.py:192: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  B, C, H, W = int(B), int(C), int(H), int(W)
Exported graph: graph(%input : Float(*, 3, 224, 224, strides=[150528, 50176, 224, 1], requires_grad=0, device=cuda:0),
      %patch_embed.0.weight : Float(48, 3, 3, 3, strides=[27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %patch_embed.0.bias : Float(48, strides=[1], requires_grad=1, device=cuda:0),
      %patch_embed.2.weight : Float(48, strides=[1], requires_grad=1, device=cuda:0),
      %patch_embed.2.bias : Float(48, strides=[1], requires_grad=1, device=cuda:0),
      %patch_embed.5.weight : Float(96, 48, 3, 3, strides=[432, 9, 3, 1], requires_grad=1, device=cuda:0),
      %patch_embed.5.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %patch_embed.7.weight : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %patch_embed.7.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.norm.weight : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.norm.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.op.out_norm.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.op.out_norm.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.op.conv2d.weight : Float(192, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.norm2.weight : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.norm2.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.mlp.fc1.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.0.mlp.fc2.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.norm.weight : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.norm.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.op.out_norm.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.op.out_norm.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.op.conv2d.weight : Float(192, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.norm2.weight : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.norm2.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.mlp.fc1.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.blocks.1.mlp.fc2.bias : Float(96, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.downsample.1.weight : Float(192, 96, 3, 3, strides=[864, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.0.downsample.1.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.downsample.3.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.0.downsample.3.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.norm.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.norm.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.op.out_norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.op.out_norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.op.conv2d.weight : Float(384, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.norm2.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.norm2.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.mlp.fc1.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.0.mlp.fc2.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.norm.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.norm.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.op.out_norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.op.out_norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.op.conv2d.weight : Float(384, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.norm2.weight : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.norm2.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.mlp.fc1.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.blocks.1.mlp.fc2.bias : Float(192, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.downsample.1.weight : Float(384, 192, 3, 3, strides=[1728, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.1.downsample.1.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.downsample.3.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.1.downsample.3.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.op.out_norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.op.out_norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.op.conv2d.weight : Float(768, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.norm2.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.norm2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.mlp.fc1.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.0.mlp.fc2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.op.out_norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.op.out_norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.op.conv2d.weight : Float(768, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.norm2.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.norm2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.mlp.fc1.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.1.mlp.fc2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.op.out_norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.op.out_norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.op.conv2d.weight : Float(768, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.norm2.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.norm2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.mlp.fc1.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.2.mlp.fc2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.op.out_norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.op.out_norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.op.conv2d.weight : Float(768, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.norm2.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.norm2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.mlp.fc1.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.3.mlp.fc2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.norm.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.norm.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.op.out_norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.op.out_norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.op.conv2d.weight : Float(768, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.norm2.weight : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.norm2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.mlp.fc1.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.blocks.4.mlp.fc2.bias : Float(384, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.downsample.1.weight : Float(768, 384, 3, 3, strides=[3456, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.2.downsample.1.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.downsample.3.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.2.downsample.3.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.op.out_norm.weight : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.op.out_norm.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.op.conv2d.weight : Float(1536, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.norm2.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.norm2.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.mlp.fc1.bias : Float(3072, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.0.mlp.fc2.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.op.out_norm.weight : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.op.out_norm.bias : Float(1536, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.op.conv2d.weight : Float(1536, 1, 3, 3, strides=[9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.norm2.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.norm2.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.mlp.fc1.bias : Float(3072, strides=[1], requires_grad=1, device=cuda:0),
      %layers.3.blocks.1.mlp.fc2.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %classifier.norm.weight : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %classifier.norm.bias : Float(768, strides=[1], requires_grad=1, device=cuda:0),
      %classifier.head.weight : Float(1000, 768, strides=[768, 1], requires_grad=1, device=cuda:0),
      %classifier.head.bias : Float(1000, strides=[1], requires_grad=1, device=cuda:0),
      %onnx::Conv_1206 : Float(192, 96, 1, 1, strides=[96, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1209 : Float(96, 192, 1, 1, strides=[192, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1211 : Float(384, 96, 1, 1, strides=[96, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1213 : Float(96, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1215 : Float(192, 96, 1, 1, strides=[96, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1218 : Float(96, 192, 1, 1, strides=[192, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1220 : Float(384, 96, 1, 1, strides=[96, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1222 : Float(96, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1224 : Float(384, 192, 1, 1, strides=[192, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1227 : Float(192, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1229 : Float(768, 192, 1, 1, strides=[192, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1231 : Float(192, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1233 : Float(384, 192, 1, 1, strides=[192, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1236 : Float(192, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1238 : Float(768, 192, 1, 1, strides=[192, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1240 : Float(192, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1242 : Float(768, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1245 : Float(384, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1247 : Float(1536, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1249 : Float(384, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1251 : Float(768, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1254 : Float(384, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1256 : Float(1536, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1258 : Float(384, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1260 : Float(768, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1263 : Float(384, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1265 : Float(1536, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1267 : Float(384, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1269 : Float(768, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1272 : Float(384, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1274 : Float(1536, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1276 : Float(384, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1278 : Float(768, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1281 : Float(384, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1283 : Float(1536, 384, 1, 1, strides=[384, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1285 : Float(384, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1287 : Float(1536, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1290 : Float(768, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1292 : Float(3072, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1294 : Float(768, 3072, 1, 1, strides=[3072, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1296 : Float(1536, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1299 : Float(768, 1536, 1, 1, strides=[1536, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1301 : Float(3072, 768, 1, 1, strides=[768, 1, 1, 1], requires_grad=0, device=cuda:0),
      %onnx::Conv_1303 : Float(768, 3072, 1, 1, strides=[3072, 1, 1, 1], requires_grad=0, device=cuda:0)):
  %/patch_embed/patch_embed.0/Conv_output_0 : Float(*, 48, 112, 112, strides=[602112, 12544, 112, 1], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2], onnx_name="/patch_embed/patch_embed.0/Conv"](%input, %patch_embed.0.weight, %patch_embed.0.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.conv.Conv2d::patch_embed.0 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/patch_embed/patch_embed.2/Transpose_output_0 : Float(*, 112, 112, 48, strides=[602112, 112, 1, 12544], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/patch_embed/patch_embed.2/Transpose"](%/patch_embed/patch_embed.0/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/patch_embed/patch_embed.2/ReduceMean_output_0 : Float(*, 112, 112, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/patch_embed/patch_embed.2/ReduceMean"](%/patch_embed/patch_embed.2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Sub_output_0 : Float(*, 112, 112, 48, device=cpu) = onnx::Sub[onnx_name="/patch_embed/patch_embed.2/Sub"](%/patch_embed/patch_embed.2/Transpose_output_0, %/patch_embed/patch_embed.2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/patch_embed/patch_embed.2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Pow_output_0 : Float(*, 112, 112, 48, device=cpu) = onnx::Pow[onnx_name="/patch_embed/patch_embed.2/Pow"](%/patch_embed/patch_embed.2/Sub_output_0, %/patch_embed/patch_embed.2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/ReduceMean_1_output_0 : Float(*, 112, 112, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/patch_embed/patch_embed.2/ReduceMean_1"](%/patch_embed/patch_embed.2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/patch_embed/patch_embed.2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Add_output_0 : Float(*, 112, 112, 1, device=cpu) = onnx::Add[onnx_name="/patch_embed/patch_embed.2/Add"](%/patch_embed/patch_embed.2/ReduceMean_1_output_0, %/patch_embed/patch_embed.2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Sqrt_output_0 : Float(*, 112, 112, 1, device=cpu) = onnx::Sqrt[onnx_name="/patch_embed/patch_embed.2/Sqrt"](%/patch_embed/patch_embed.2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Div_output_0 : Float(*, 112, 112, 48, device=cpu) = onnx::Div[onnx_name="/patch_embed/patch_embed.2/Div"](%/patch_embed/patch_embed.2/Sub_output_0, %/patch_embed/patch_embed.2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Mul_output_0 : Float(*, 112, 112, 48, device=cpu) = onnx::Mul[onnx_name="/patch_embed/patch_embed.2/Mul"](%/patch_embed/patch_embed.2/Div_output_0, %patch_embed.2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Add_1_output_0 : Float(*, 112, 112, 48, strides=[602112, 5376, 48, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/patch_embed/patch_embed.2/Add_1"](%/patch_embed/patch_embed.2/Mul_output_0, %patch_embed.2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.2/Transpose_1_output_0 : Float(*, 48, 112, 112, strides=[602112, 1, 5376, 48], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/patch_embed/patch_embed.2/Transpose_1"](%/patch_embed/patch_embed.2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/patch_embed/patch_embed.4/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/patch_embed/patch_embed.4/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Div_output_0 : Float(*, 48, 112, 112, device=cpu) = onnx::Div[onnx_name="/patch_embed/patch_embed.4/Div"](%/patch_embed/patch_embed.2/Transpose_1_output_0, %/patch_embed/patch_embed.4/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Erf_output_0 : Float(*, 48, 112, 112, device=cpu) = onnx::Erf[onnx_name="/patch_embed/patch_embed.4/Erf"](%/patch_embed/patch_embed.4/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/patch_embed/patch_embed.4/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Add_output_0 : Float(*, 48, 112, 112, device=cpu) = onnx::Add[onnx_name="/patch_embed/patch_embed.4/Add"](%/patch_embed/patch_embed.4/Erf_output_0, %/patch_embed/patch_embed.4/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Mul_output_0 : Float(*, 48, 112, 112, device=cpu) = onnx::Mul[onnx_name="/patch_embed/patch_embed.4/Mul"](%/patch_embed/patch_embed.2/Transpose_1_output_0, %/patch_embed/patch_embed.4/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/patch_embed/patch_embed.4/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.4/Mul_1_output_0 : Float(*, 48, 112, 112, strides=[602112, 1, 5376, 48], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/patch_embed/patch_embed.4/Mul_1"](%/patch_embed/patch_embed.4/Mul_output_0, %/patch_embed/patch_embed.4/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.activation.GELU::patch_embed.4 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/patch_embed/patch_embed.5/Conv_output_0 : Float(*, 96, 56, 56, strides=[301056, 1, 5376, 96], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2], onnx_name="/patch_embed/patch_embed.5/Conv"](%/patch_embed/patch_embed.4/Mul_1_output_0, %patch_embed.5.weight, %patch_embed.5.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/torch.nn.modules.conv.Conv2d::patch_embed.5 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/patch_embed/patch_embed.7/Transpose_output_0 : Float(*, 56, 56, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/patch_embed/patch_embed.7/Transpose"](%/patch_embed/patch_embed.5/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/patch_embed/patch_embed.7/ReduceMean_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/patch_embed/patch_embed.7/ReduceMean"](%/patch_embed/patch_embed.7/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Sub_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Sub[onnx_name="/patch_embed/patch_embed.7/Sub"](%/patch_embed/patch_embed.7/Transpose_output_0, %/patch_embed/patch_embed.7/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/patch_embed/patch_embed.7/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Pow_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Pow[onnx_name="/patch_embed/patch_embed.7/Pow"](%/patch_embed/patch_embed.7/Sub_output_0, %/patch_embed/patch_embed.7/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/ReduceMean_1_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/patch_embed/patch_embed.7/ReduceMean_1"](%/patch_embed/patch_embed.7/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/patch_embed/patch_embed.7/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Add_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::Add[onnx_name="/patch_embed/patch_embed.7/Add"](%/patch_embed/patch_embed.7/ReduceMean_1_output_0, %/patch_embed/patch_embed.7/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Sqrt_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::Sqrt[onnx_name="/patch_embed/patch_embed.7/Sqrt"](%/patch_embed/patch_embed.7/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Div_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Div[onnx_name="/patch_embed/patch_embed.7/Div"](%/patch_embed/patch_embed.7/Sub_output_0, %/patch_embed/patch_embed.7/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Mul_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Mul[onnx_name="/patch_embed/patch_embed.7/Mul"](%/patch_embed/patch_embed.7/Div_output_0, %patch_embed.7.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Add_1_output_0 : Float(*, 56, 56, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/patch_embed/patch_embed.7/Add_1"](%/patch_embed/patch_embed.7/Mul_output_0, %patch_embed.7.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/patch_embed/patch_embed.7/Transpose_1_output_0 : Float(*, 96, 56, 56, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/patch_embed/patch_embed.7/Transpose_1"](%/patch_embed/patch_embed.7/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::patch_embed/models.vmamba.LayerNorm2d::patch_embed.7 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.0/norm/ReduceMean_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.0/norm/ReduceMean"](%/patch_embed/patch_embed.7/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Sub_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Sub[onnx_name="/layers.0/blocks/blocks.0/norm/Sub"](%/patch_embed/patch_embed.7/Add_1_output_0, %/layers.0/blocks/blocks.0/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.0/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Pow_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Pow[onnx_name="/layers.0/blocks/blocks.0/norm/Pow"](%/layers.0/blocks/blocks.0/norm/Sub_output_0, %/layers.0/blocks/blocks.0/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/ReduceMean_1_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.0/norm/ReduceMean_1"](%/layers.0/blocks/blocks.0/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/blocks/blocks.0/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Add_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/norm/Add"](%/layers.0/blocks/blocks.0/norm/ReduceMean_1_output_0, %/layers.0/blocks/blocks.0/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Sqrt_output_0 : Float(*, 56, 56, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/blocks/blocks.0/norm/Sqrt"](%/layers.0/blocks/blocks.0/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Div_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.0/norm/Div"](%/layers.0/blocks/blocks.0/norm/Sub_output_0, %/layers.0/blocks/blocks.0/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Mul_output_0 : Float(*, 56, 56, 96, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.0/norm/Mul"](%/layers.0/blocks/blocks.0/norm/Div_output_0, %layers.0.blocks.0.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Add_1_output_0 : Float(*, 56, 56, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/norm/Add_1"](%/layers.0/blocks/blocks.0/norm/Mul_output_0, %layers.0.blocks.0.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm/Transpose_output_0 : Float(*, 96, 56, 56, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/blocks/blocks.0/norm/Transpose"](%/layers.0/blocks/blocks.0/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.0/op/in_proj/Conv_output_0 : Float(*, 192, 56, 56, strides=[602112, 1, 10752, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.0/op/in_proj/Conv"](%/layers.0/blocks/blocks.0/norm/Transpose_output_0, %onnx::Conv_1206), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.0/op/conv2d/Conv_output_0 : Float(*, 192, 56, 56, strides=[602112, 1, 10752, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=192, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.0/op/conv2d/Conv"](%/layers.0/blocks/blocks.0/op/in_proj/Conv_output_0, %layers.0.blocks.0.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.0/blocks/blocks.0/op/act/Sigmoid_output_0 : Float(*, 192, 56, 56, device=cpu) = onnx::Sigmoid[onnx_name="/layers.0/blocks/blocks.0/op/act/Sigmoid"](%/layers.0/blocks/blocks.0/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.0/blocks/blocks.0/op/act/Mul_output_0 : Float(*, 192, 56, 56, strides=[602112, 3136, 56, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.0/op/act/Mul"](%/layers.0/blocks/blocks.0/op/conv2d/Conv_output_0, %/layers.0/blocks/blocks.0/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.0/blocks/blocks.0/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.0/blocks/blocks.0/op/Shape"](%/layers.0/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.0/blocks/blocks.0/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.0/blocks/blocks.0/op/Gather"](%/layers.0/blocks/blocks.0/op/Shape_output_0, %/layers.0/blocks/blocks.0/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.0/blocks/blocks.0/op/Shape_1"](%/layers.0/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.0/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.0/blocks/blocks.0/op/Gather_1"](%/layers.0/blocks/blocks.0/op/Shape_1_output_0, %/layers.0/blocks/blocks.0/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.0/blocks/blocks.0/op/Shape_2"](%/layers.0/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.0/blocks/blocks.0/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.0/blocks/blocks.0/op/Gather_2"](%/layers.0/blocks/blocks.0/op/Shape_2_output_0, %/layers.0/blocks/blocks.0/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.0/op/Constant_3_output_0 : Float(1, 192, 3136, strides=[602112, 3136, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.0/blocks/blocks.0/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.0/blocks/blocks.0/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.0/blocks/blocks.0/op/Unsqueeze"](%/layers.0/blocks/blocks.0/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.0/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.0/blocks/blocks.0/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.0/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.0/blocks/blocks.0/op/Unsqueeze_1"](%/layers.0/blocks/blocks.0/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.0/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.0/blocks/blocks.0/op/Unsqueeze_2"](%/layers.0/blocks/blocks.0/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.0/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.0/blocks/blocks.0/op/Concat"](%/layers.0/blocks/blocks.0/op/Unsqueeze_output_0, %/layers.0/blocks/blocks.0/op/Constant_4_output_0, %/layers.0/blocks/blocks.0/op/Unsqueeze_1_output_0, %/layers.0/blocks/blocks.0/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.0/blocks/blocks.0/op/Reshape_output_0 : Float(*, *, *, *, strides=[602112, 3136, 56, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.0/blocks/blocks.0/op/Reshape"](%/layers.0/blocks/blocks.0/op/Constant_3_output_0, %/layers.0/blocks/blocks.0/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.0/blocks/blocks.0/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[602112, 56, 1, 3136], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Transpose"](%/layers.0/blocks/blocks.0/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.0/blocks/blocks.0/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.0/op/out_norm/ReduceMean"](%/layers.0/blocks/blocks.0/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Sub"](%/layers.0/blocks/blocks.0/op/out_norm/Transpose_output_0, %/layers.0/blocks/blocks.0/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Pow"](%/layers.0/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.0/blocks/blocks.0/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.0/op/out_norm/ReduceMean_1"](%/layers.0/blocks/blocks.0/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Add"](%/layers.0/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0, %/layers.0/blocks/blocks.0/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Sqrt"](%/layers.0/blocks/blocks.0/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Div"](%/layers.0/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.0/blocks/blocks.0/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Mul"](%/layers.0/blocks/blocks.0/op/out_norm/Div_output_0, %layers.0.blocks.0.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[602112, 10752, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Add_1"](%/layers.0/blocks/blocks.0/op/out_norm/Mul_output_0, %layers.0.blocks.0.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[602112, 1, 10752, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/blocks/blocks.0/op/out_norm/Transpose_1"](%/layers.0/blocks/blocks.0/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.0/op/Cast_output_0 : Float(*, *, *, *, strides=[602112, 1, 10752, 192], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.0/blocks/blocks.0/op/Cast"](%/layers.0/blocks/blocks.0/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.0/blocks/blocks.0/op/out_proj/Conv_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.0/op/out_proj/Conv"](%/layers.0/blocks/blocks.0/op/Cast_output_0, %onnx::Conv_1209), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.0/Add_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/Add"](%/patch_embed/patch_embed.7/Transpose_1_output_0, %/layers.0/blocks/blocks.0/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.0/blocks/blocks.0/norm2/Transpose_output_0 : Float(*, *, *, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.0/blocks/blocks.0/norm2/Transpose"](%/layers.0/blocks/blocks.0/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.0/blocks/blocks.0/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.0/norm2/ReduceMean"](%/layers.0/blocks/blocks.0/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Sub_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Sub[onnx_name="/layers.0/blocks/blocks.0/norm2/Sub"](%/layers.0/blocks/blocks.0/norm2/Transpose_output_0, %/layers.0/blocks/blocks.0/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.0/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Pow_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Pow[onnx_name="/layers.0/blocks/blocks.0/norm2/Pow"](%/layers.0/blocks/blocks.0/norm2/Sub_output_0, %/layers.0/blocks/blocks.0/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.0/norm2/ReduceMean_1"](%/layers.0/blocks/blocks.0/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/blocks/blocks.0/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/norm2/Add"](%/layers.0/blocks/blocks.0/norm2/ReduceMean_1_output_0, %/layers.0/blocks/blocks.0/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/blocks/blocks.0/norm2/Sqrt"](%/layers.0/blocks/blocks.0/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Div_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.0/norm2/Div"](%/layers.0/blocks/blocks.0/norm2/Sub_output_0, %/layers.0/blocks/blocks.0/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Mul_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.0/norm2/Mul"](%/layers.0/blocks/blocks.0/norm2/Div_output_0, %layers.0.blocks.0.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Add_1_output_0 : Float(*, *, *, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/norm2/Add_1"](%/layers.0/blocks/blocks.0/norm2/Mul_output_0, %layers.0.blocks.0.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.0/norm2/Transpose_1_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/blocks/blocks.0/norm2/Transpose_1"](%/layers.0/blocks/blocks.0/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.0/mlp/fc1/Conv_output_0 : Float(*, 384, *, *, strides=[1204224, 1, 21504, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.0/mlp/fc1/Conv"](%/layers.0/blocks/blocks.0/norm2/Transpose_1_output_0, %onnx::Conv_1211, %layers.0.blocks.0.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.0/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.0/blocks/blocks.0/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Div_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.0/mlp/act/Div"](%/layers.0/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.0/blocks/blocks.0/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Erf_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.0/blocks/blocks.0/mlp/act/Erf"](%/layers.0/blocks/blocks.0/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.0/blocks/blocks.0/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Add_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/mlp/act/Add"](%/layers.0/blocks/blocks.0/mlp/act/Erf_output_0, %/layers.0/blocks/blocks.0/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Mul_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.0/mlp/act/Mul"](%/layers.0/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.0/blocks/blocks.0/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.0/blocks/blocks.0/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/act/Mul_1_output_0 : Float(*, 384, *, *, strides=[1204224, 1, 21504, 384], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.0/mlp/act/Mul_1"](%/layers.0/blocks/blocks.0/mlp/act/Mul_output_0, %/layers.0/blocks/blocks.0/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.0/mlp/fc2/Conv_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.0/mlp/fc2/Conv"](%/layers.0/blocks/blocks.0/mlp/act/Mul_1_output_0, %onnx::Conv_1213, %layers.0.blocks.0.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.0/Add_1_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.0/Add_1"](%/layers.0/blocks/blocks.0/Add_output_0, %/layers.0/blocks/blocks.0/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.0/blocks/blocks.1/norm/Transpose_output_0 : Float(*, *, *, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.0/blocks/blocks.1/norm/Transpose"](%/layers.0/blocks/blocks.0/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.0/blocks/blocks.1/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.1/norm/ReduceMean"](%/layers.0/blocks/blocks.1/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Sub_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Sub[onnx_name="/layers.0/blocks/blocks.1/norm/Sub"](%/layers.0/blocks/blocks.1/norm/Transpose_output_0, %/layers.0/blocks/blocks.1/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.1/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Pow_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Pow[onnx_name="/layers.0/blocks/blocks.1/norm/Pow"](%/layers.0/blocks/blocks.1/norm/Sub_output_0, %/layers.0/blocks/blocks.1/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.1/norm/ReduceMean_1"](%/layers.0/blocks/blocks.1/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/blocks/blocks.1/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/norm/Add"](%/layers.0/blocks/blocks.1/norm/ReduceMean_1_output_0, %/layers.0/blocks/blocks.1/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/blocks/blocks.1/norm/Sqrt"](%/layers.0/blocks/blocks.1/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Div_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.1/norm/Div"](%/layers.0/blocks/blocks.1/norm/Sub_output_0, %/layers.0/blocks/blocks.1/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Mul_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.1/norm/Mul"](%/layers.0/blocks/blocks.1/norm/Div_output_0, %layers.0.blocks.1.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Add_1_output_0 : Float(*, *, *, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/norm/Add_1"](%/layers.0/blocks/blocks.1/norm/Mul_output_0, %layers.0.blocks.1.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm/Transpose_1_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/blocks/blocks.1/norm/Transpose_1"](%/layers.0/blocks/blocks.1/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.1/op/in_proj/Conv_output_0 : Float(*, 192, *, *, strides=[602112, 1, 10752, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.1/op/in_proj/Conv"](%/layers.0/blocks/blocks.1/norm/Transpose_1_output_0, %onnx::Conv_1215), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.1/op/conv2d/Conv_output_0 : Float(*, 192, *, *, strides=[602112, 1, 10752, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=192, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.1/op/conv2d/Conv"](%/layers.0/blocks/blocks.1/op/in_proj/Conv_output_0, %layers.0.blocks.1.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.0/blocks/blocks.1/op/act/Sigmoid_output_0 : Float(*, 192, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.0/blocks/blocks.1/op/act/Sigmoid"](%/layers.0/blocks/blocks.1/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.0/blocks/blocks.1/op/act/Mul_output_0 : Float(*, 192, *, *, strides=[602112, 3136, 56, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.1/op/act/Mul"](%/layers.0/blocks/blocks.1/op/conv2d/Conv_output_0, %/layers.0/blocks/blocks.1/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.0/blocks/blocks.1/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.0/blocks/blocks.1/op/Shape"](%/layers.0/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.0/blocks/blocks.1/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.0/blocks/blocks.1/op/Gather"](%/layers.0/blocks/blocks.1/op/Shape_output_0, %/layers.0/blocks/blocks.1/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.0/blocks/blocks.1/op/Shape_1"](%/layers.0/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.1/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.0/blocks/blocks.1/op/Gather_1"](%/layers.0/blocks/blocks.1/op/Shape_1_output_0, %/layers.0/blocks/blocks.1/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.0/blocks/blocks.1/op/Shape_2"](%/layers.0/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.0/blocks/blocks.1/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.0/blocks/blocks.1/op/Gather_2"](%/layers.0/blocks/blocks.1/op/Shape_2_output_0, %/layers.0/blocks/blocks.1/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.0/blocks/blocks.1/op/Constant_3_output_0 : Float(1, 192, 3136, strides=[602112, 3136, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.0/blocks/blocks.1/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.0/blocks/blocks.1/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.0/blocks/blocks.1/op/Unsqueeze"](%/layers.0/blocks/blocks.1/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.1/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.0/blocks/blocks.1/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.1/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.0/blocks/blocks.1/op/Unsqueeze_1"](%/layers.0/blocks/blocks.1/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.1/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.0/blocks/blocks.1/op/Unsqueeze_2"](%/layers.0/blocks/blocks.1/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.0/blocks/blocks.1/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.0/blocks/blocks.1/op/Concat"](%/layers.0/blocks/blocks.1/op/Unsqueeze_output_0, %/layers.0/blocks/blocks.1/op/Constant_4_output_0, %/layers.0/blocks/blocks.1/op/Unsqueeze_1_output_0, %/layers.0/blocks/blocks.1/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.0/blocks/blocks.1/op/Reshape_output_0 : Float(*, *, *, *, strides=[602112, 3136, 56, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.0/blocks/blocks.1/op/Reshape"](%/layers.0/blocks/blocks.1/op/Constant_3_output_0, %/layers.0/blocks/blocks.1/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.0/blocks/blocks.1/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[602112, 56, 1, 3136], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Transpose"](%/layers.0/blocks/blocks.1/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.0/blocks/blocks.1/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.1/op/out_norm/ReduceMean"](%/layers.0/blocks/blocks.1/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Sub"](%/layers.0/blocks/blocks.1/op/out_norm/Transpose_output_0, %/layers.0/blocks/blocks.1/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Pow"](%/layers.0/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.0/blocks/blocks.1/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.1/op/out_norm/ReduceMean_1"](%/layers.0/blocks/blocks.1/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Add"](%/layers.0/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0, %/layers.0/blocks/blocks.1/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Sqrt"](%/layers.0/blocks/blocks.1/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Div"](%/layers.0/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.0/blocks/blocks.1/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Mul"](%/layers.0/blocks/blocks.1/op/out_norm/Div_output_0, %layers.0.blocks.1.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[602112, 10752, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Add_1"](%/layers.0/blocks/blocks.1/op/out_norm/Mul_output_0, %layers.0.blocks.1.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[602112, 1, 10752, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/blocks/blocks.1/op/out_norm/Transpose_1"](%/layers.0/blocks/blocks.1/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.1/op/Cast_output_0 : Float(*, *, *, *, strides=[602112, 1, 10752, 192], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.0/blocks/blocks.1/op/Cast"](%/layers.0/blocks/blocks.1/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.0/blocks/blocks.1/op/out_proj/Conv_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.1/op/out_proj/Conv"](%/layers.0/blocks/blocks.1/op/Cast_output_0, %onnx::Conv_1218), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.1/Add_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/Add"](%/layers.0/blocks/blocks.0/Add_1_output_0, %/layers.0/blocks/blocks.1/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.0/blocks/blocks.1/norm2/Transpose_output_0 : Float(*, *, *, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.0/blocks/blocks.1/norm2/Transpose"](%/layers.0/blocks/blocks.1/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.0/blocks/blocks.1/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.1/norm2/ReduceMean"](%/layers.0/blocks/blocks.1/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Sub_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Sub[onnx_name="/layers.0/blocks/blocks.1/norm2/Sub"](%/layers.0/blocks/blocks.1/norm2/Transpose_output_0, %/layers.0/blocks/blocks.1/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/blocks/blocks.1/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Pow_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Pow[onnx_name="/layers.0/blocks/blocks.1/norm2/Pow"](%/layers.0/blocks/blocks.1/norm2/Sub_output_0, %/layers.0/blocks/blocks.1/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/blocks/blocks.1/norm2/ReduceMean_1"](%/layers.0/blocks/blocks.1/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/blocks/blocks.1/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/norm2/Add"](%/layers.0/blocks/blocks.1/norm2/ReduceMean_1_output_0, %/layers.0/blocks/blocks.1/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/blocks/blocks.1/norm2/Sqrt"](%/layers.0/blocks/blocks.1/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Div_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.1/norm2/Div"](%/layers.0/blocks/blocks.1/norm2/Sub_output_0, %/layers.0/blocks/blocks.1/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Mul_output_0 : Float(*, *, *, 96, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.1/norm2/Mul"](%/layers.0/blocks/blocks.1/norm2/Div_output_0, %layers.0.blocks.1.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Add_1_output_0 : Float(*, *, *, 96, strides=[301056, 5376, 96, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/norm2/Add_1"](%/layers.0/blocks/blocks.1/norm2/Mul_output_0, %layers.0.blocks.1.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/blocks/blocks.1/norm2/Transpose_1_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/blocks/blocks.1/norm2/Transpose_1"](%/layers.0/blocks/blocks.1/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.0/blocks/blocks.1/mlp/fc1/Conv_output_0 : Float(*, 384, *, *, strides=[1204224, 1, 21504, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.1/mlp/fc1/Conv"](%/layers.0/blocks/blocks.1/norm2/Transpose_1_output_0, %onnx::Conv_1220, %layers.0.blocks.1.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.1/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.0/blocks/blocks.1/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Div_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Div[onnx_name="/layers.0/blocks/blocks.1/mlp/act/Div"](%/layers.0/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.0/blocks/blocks.1/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Erf_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.0/blocks/blocks.1/mlp/act/Erf"](%/layers.0/blocks/blocks.1/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.0/blocks/blocks.1/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Add_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/mlp/act/Add"](%/layers.0/blocks/blocks.1/mlp/act/Erf_output_0, %/layers.0/blocks/blocks.1/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Mul_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.1/mlp/act/Mul"](%/layers.0/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.0/blocks/blocks.1/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.0/blocks/blocks.1/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/act/Mul_1_output_0 : Float(*, 384, *, *, strides=[1204224, 1, 21504, 384], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.0/blocks/blocks.1/mlp/act/Mul_1"](%/layers.0/blocks/blocks.1/mlp/act/Mul_output_0, %/layers.0/blocks/blocks.1/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.0/blocks/blocks.1/mlp/fc2/Conv_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.0/blocks/blocks.1/mlp/fc2/Conv"](%/layers.0/blocks/blocks.1/mlp/act/Mul_1_output_0, %onnx::Conv_1222, %layers.0.blocks.1.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.0/blocks/blocks.1/Add_1_output_0 : Float(*, 96, *, *, strides=[301056, 1, 5376, 96], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/blocks/blocks.1/Add_1"](%/layers.0/blocks/blocks.1/Add_output_0, %/layers.0/blocks/blocks.1/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.0/downsample/downsample.1/Conv_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2], onnx_name="/layers.0/downsample/downsample.1/Conv"](%/layers.0/blocks/blocks.1/Add_1_output_0, %layers.0.downsample.1.weight, %layers.0.downsample.1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/torch.nn.modules.conv.Conv2d::downsample.1 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.0/downsample/downsample.3/Transpose_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.0/downsample/downsample.3/Transpose"](%/layers.0/downsample/downsample.1/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.0/downsample/downsample.3/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/downsample/downsample.3/ReduceMean"](%/layers.0/downsample/downsample.3/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Sub_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Sub[onnx_name="/layers.0/downsample/downsample.3/Sub"](%/layers.0/downsample/downsample.3/Transpose_output_0, %/layers.0/downsample/downsample.3/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.0/downsample/downsample.3/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Pow_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Pow[onnx_name="/layers.0/downsample/downsample.3/Pow"](%/layers.0/downsample/downsample.3/Sub_output_0, %/layers.0/downsample/downsample.3/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.0/downsample/downsample.3/ReduceMean_1"](%/layers.0/downsample/downsample.3/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.0/downsample/downsample.3/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.0/downsample/downsample.3/Add"](%/layers.0/downsample/downsample.3/ReduceMean_1_output_0, %/layers.0/downsample/downsample.3/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.0/downsample/downsample.3/Sqrt"](%/layers.0/downsample/downsample.3/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Div_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Div[onnx_name="/layers.0/downsample/downsample.3/Div"](%/layers.0/downsample/downsample.3/Sub_output_0, %/layers.0/downsample/downsample.3/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Mul_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Mul[onnx_name="/layers.0/downsample/downsample.3/Mul"](%/layers.0/downsample/downsample.3/Div_output_0, %layers.0.downsample.3.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Add_1_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.0/downsample/downsample.3/Add_1"](%/layers.0/downsample/downsample.3/Mul_output_0, %layers.0.downsample.3.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.0/downsample/downsample.3/Transpose_1_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.0/downsample/downsample.3/Transpose_1"](%/layers.0/downsample/downsample.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.0/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.0/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.0/norm/ReduceMean"](%/layers.0/downsample/downsample.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Sub_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Sub[onnx_name="/layers.1/blocks/blocks.0/norm/Sub"](%/layers.0/downsample/downsample.3/Add_1_output_0, %/layers.1/blocks/blocks.0/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.0/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Pow_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Pow[onnx_name="/layers.1/blocks/blocks.0/norm/Pow"](%/layers.1/blocks/blocks.0/norm/Sub_output_0, %/layers.1/blocks/blocks.0/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.0/norm/ReduceMean_1"](%/layers.1/blocks/blocks.0/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/blocks/blocks.0/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/norm/Add"](%/layers.1/blocks/blocks.0/norm/ReduceMean_1_output_0, %/layers.1/blocks/blocks.0/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/blocks/blocks.0/norm/Sqrt"](%/layers.1/blocks/blocks.0/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Div_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.0/norm/Div"](%/layers.1/blocks/blocks.0/norm/Sub_output_0, %/layers.1/blocks/blocks.0/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Mul_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.0/norm/Mul"](%/layers.1/blocks/blocks.0/norm/Div_output_0, %layers.1.blocks.0.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Add_1_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/norm/Add_1"](%/layers.1/blocks/blocks.0/norm/Mul_output_0, %layers.1.blocks.0.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm/Transpose_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/blocks/blocks.0/norm/Transpose"](%/layers.1/blocks/blocks.0/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.0/op/in_proj/Conv_output_0 : Float(*, 384, *, *, strides=[301056, 1, 10752, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.0/op/in_proj/Conv"](%/layers.1/blocks/blocks.0/norm/Transpose_output_0, %onnx::Conv_1224), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.0/op/conv2d/Conv_output_0 : Float(*, 384, *, *, strides=[301056, 1, 10752, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=384, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.0/op/conv2d/Conv"](%/layers.1/blocks/blocks.0/op/in_proj/Conv_output_0, %layers.1.blocks.0.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.1/blocks/blocks.0/op/act/Sigmoid_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.1/blocks/blocks.0/op/act/Sigmoid"](%/layers.1/blocks/blocks.0/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.1/blocks/blocks.0/op/act/Mul_output_0 : Float(*, 384, *, *, strides=[301056, 784, 28, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.0/op/act/Mul"](%/layers.1/blocks/blocks.0/op/conv2d/Conv_output_0, %/layers.1/blocks/blocks.0/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.1/blocks/blocks.0/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.1/blocks/blocks.0/op/Shape"](%/layers.1/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.1/blocks/blocks.0/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.1/blocks/blocks.0/op/Gather"](%/layers.1/blocks/blocks.0/op/Shape_output_0, %/layers.1/blocks/blocks.0/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.1/blocks/blocks.0/op/Shape_1"](%/layers.1/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.0/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.1/blocks/blocks.0/op/Gather_1"](%/layers.1/blocks/blocks.0/op/Shape_1_output_0, %/layers.1/blocks/blocks.0/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.1/blocks/blocks.0/op/Shape_2"](%/layers.1/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.1/blocks/blocks.0/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.1/blocks/blocks.0/op/Gather_2"](%/layers.1/blocks/blocks.0/op/Shape_2_output_0, %/layers.1/blocks/blocks.0/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.0/op/Constant_3_output_0 : Float(1, 384, 784, strides=[301056, 784, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.1/blocks/blocks.0/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.1/blocks/blocks.0/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.1/blocks/blocks.0/op/Unsqueeze"](%/layers.1/blocks/blocks.0/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.0/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.1/blocks/blocks.0/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.0/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.1/blocks/blocks.0/op/Unsqueeze_1"](%/layers.1/blocks/blocks.0/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.0/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.1/blocks/blocks.0/op/Unsqueeze_2"](%/layers.1/blocks/blocks.0/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.0/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.1/blocks/blocks.0/op/Concat"](%/layers.1/blocks/blocks.0/op/Unsqueeze_output_0, %/layers.1/blocks/blocks.0/op/Constant_4_output_0, %/layers.1/blocks/blocks.0/op/Unsqueeze_1_output_0, %/layers.1/blocks/blocks.0/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.1/blocks/blocks.0/op/Reshape_output_0 : Float(*, *, *, *, strides=[301056, 784, 28, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.1/blocks/blocks.0/op/Reshape"](%/layers.1/blocks/blocks.0/op/Constant_3_output_0, %/layers.1/blocks/blocks.0/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.1/blocks/blocks.0/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[301056, 28, 1, 784], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Transpose"](%/layers.1/blocks/blocks.0/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.1/blocks/blocks.0/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.0/op/out_norm/ReduceMean"](%/layers.1/blocks/blocks.0/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Sub"](%/layers.1/blocks/blocks.0/op/out_norm/Transpose_output_0, %/layers.1/blocks/blocks.0/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Pow"](%/layers.1/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.1/blocks/blocks.0/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.0/op/out_norm/ReduceMean_1"](%/layers.1/blocks/blocks.0/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Add"](%/layers.1/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0, %/layers.1/blocks/blocks.0/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Sqrt"](%/layers.1/blocks/blocks.0/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Div"](%/layers.1/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.1/blocks/blocks.0/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Mul"](%/layers.1/blocks/blocks.0/op/out_norm/Div_output_0, %layers.1.blocks.0.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[301056, 10752, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Add_1"](%/layers.1/blocks/blocks.0/op/out_norm/Mul_output_0, %layers.1.blocks.0.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[301056, 1, 10752, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/blocks/blocks.0/op/out_norm/Transpose_1"](%/layers.1/blocks/blocks.0/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.0/op/Cast_output_0 : Float(*, *, *, *, strides=[301056, 1, 10752, 384], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.1/blocks/blocks.0/op/Cast"](%/layers.1/blocks/blocks.0/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.1/blocks/blocks.0/op/out_proj/Conv_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.0/op/out_proj/Conv"](%/layers.1/blocks/blocks.0/op/Cast_output_0, %onnx::Conv_1227), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.0/Add_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/Add"](%/layers.0/downsample/downsample.3/Transpose_1_output_0, %/layers.1/blocks/blocks.0/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.1/blocks/blocks.0/norm2/Transpose_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.1/blocks/blocks.0/norm2/Transpose"](%/layers.1/blocks/blocks.0/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.1/blocks/blocks.0/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.0/norm2/ReduceMean"](%/layers.1/blocks/blocks.0/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Sub_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Sub[onnx_name="/layers.1/blocks/blocks.0/norm2/Sub"](%/layers.1/blocks/blocks.0/norm2/Transpose_output_0, %/layers.1/blocks/blocks.0/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.0/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Pow_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Pow[onnx_name="/layers.1/blocks/blocks.0/norm2/Pow"](%/layers.1/blocks/blocks.0/norm2/Sub_output_0, %/layers.1/blocks/blocks.0/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.0/norm2/ReduceMean_1"](%/layers.1/blocks/blocks.0/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/blocks/blocks.0/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/norm2/Add"](%/layers.1/blocks/blocks.0/norm2/ReduceMean_1_output_0, %/layers.1/blocks/blocks.0/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/blocks/blocks.0/norm2/Sqrt"](%/layers.1/blocks/blocks.0/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Div_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.0/norm2/Div"](%/layers.1/blocks/blocks.0/norm2/Sub_output_0, %/layers.1/blocks/blocks.0/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Mul_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.0/norm2/Mul"](%/layers.1/blocks/blocks.0/norm2/Div_output_0, %layers.1.blocks.0.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Add_1_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/norm2/Add_1"](%/layers.1/blocks/blocks.0/norm2/Mul_output_0, %layers.1.blocks.0.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.0/norm2/Transpose_1_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/blocks/blocks.0/norm2/Transpose_1"](%/layers.1/blocks/blocks.0/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.0/mlp/fc1/Conv_output_0 : Float(*, 768, *, *, strides=[602112, 1, 21504, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.0/mlp/fc1/Conv"](%/layers.1/blocks/blocks.0/norm2/Transpose_1_output_0, %onnx::Conv_1229, %layers.1.blocks.0.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.0/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.1/blocks/blocks.0/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Div_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.0/mlp/act/Div"](%/layers.1/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.1/blocks/blocks.0/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Erf_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.1/blocks/blocks.0/mlp/act/Erf"](%/layers.1/blocks/blocks.0/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.1/blocks/blocks.0/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Add_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/mlp/act/Add"](%/layers.1/blocks/blocks.0/mlp/act/Erf_output_0, %/layers.1/blocks/blocks.0/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Mul_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.0/mlp/act/Mul"](%/layers.1/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.1/blocks/blocks.0/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.1/blocks/blocks.0/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/act/Mul_1_output_0 : Float(*, 768, *, *, strides=[602112, 1, 21504, 768], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.0/mlp/act/Mul_1"](%/layers.1/blocks/blocks.0/mlp/act/Mul_output_0, %/layers.1/blocks/blocks.0/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.0/mlp/fc2/Conv_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.0/mlp/fc2/Conv"](%/layers.1/blocks/blocks.0/mlp/act/Mul_1_output_0, %onnx::Conv_1231, %layers.1.blocks.0.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.0/Add_1_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.0/Add_1"](%/layers.1/blocks/blocks.0/Add_output_0, %/layers.1/blocks/blocks.0/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.1/blocks/blocks.1/norm/Transpose_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.1/blocks/blocks.1/norm/Transpose"](%/layers.1/blocks/blocks.0/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.1/blocks/blocks.1/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.1/norm/ReduceMean"](%/layers.1/blocks/blocks.1/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Sub_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Sub[onnx_name="/layers.1/blocks/blocks.1/norm/Sub"](%/layers.1/blocks/blocks.1/norm/Transpose_output_0, %/layers.1/blocks/blocks.1/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.1/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Pow_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Pow[onnx_name="/layers.1/blocks/blocks.1/norm/Pow"](%/layers.1/blocks/blocks.1/norm/Sub_output_0, %/layers.1/blocks/blocks.1/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.1/norm/ReduceMean_1"](%/layers.1/blocks/blocks.1/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/blocks/blocks.1/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/norm/Add"](%/layers.1/blocks/blocks.1/norm/ReduceMean_1_output_0, %/layers.1/blocks/blocks.1/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/blocks/blocks.1/norm/Sqrt"](%/layers.1/blocks/blocks.1/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Div_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.1/norm/Div"](%/layers.1/blocks/blocks.1/norm/Sub_output_0, %/layers.1/blocks/blocks.1/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Mul_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.1/norm/Mul"](%/layers.1/blocks/blocks.1/norm/Div_output_0, %layers.1.blocks.1.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Add_1_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/norm/Add_1"](%/layers.1/blocks/blocks.1/norm/Mul_output_0, %layers.1.blocks.1.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm/Transpose_1_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/blocks/blocks.1/norm/Transpose_1"](%/layers.1/blocks/blocks.1/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.1/op/in_proj/Conv_output_0 : Float(*, 384, *, *, strides=[301056, 1, 10752, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.1/op/in_proj/Conv"](%/layers.1/blocks/blocks.1/norm/Transpose_1_output_0, %onnx::Conv_1233), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.1/op/conv2d/Conv_output_0 : Float(*, 384, *, *, strides=[301056, 1, 10752, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=384, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.1/op/conv2d/Conv"](%/layers.1/blocks/blocks.1/op/in_proj/Conv_output_0, %layers.1.blocks.1.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.1/blocks/blocks.1/op/act/Sigmoid_output_0 : Float(*, 384, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.1/blocks/blocks.1/op/act/Sigmoid"](%/layers.1/blocks/blocks.1/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.1/blocks/blocks.1/op/act/Mul_output_0 : Float(*, 384, *, *, strides=[301056, 784, 28, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.1/op/act/Mul"](%/layers.1/blocks/blocks.1/op/conv2d/Conv_output_0, %/layers.1/blocks/blocks.1/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.1/blocks/blocks.1/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.1/blocks/blocks.1/op/Shape"](%/layers.1/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.1/blocks/blocks.1/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.1/blocks/blocks.1/op/Gather"](%/layers.1/blocks/blocks.1/op/Shape_output_0, %/layers.1/blocks/blocks.1/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.1/blocks/blocks.1/op/Shape_1"](%/layers.1/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.1/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.1/blocks/blocks.1/op/Gather_1"](%/layers.1/blocks/blocks.1/op/Shape_1_output_0, %/layers.1/blocks/blocks.1/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.1/blocks/blocks.1/op/Shape_2"](%/layers.1/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.1/blocks/blocks.1/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.1/blocks/blocks.1/op/Gather_2"](%/layers.1/blocks/blocks.1/op/Shape_2_output_0, %/layers.1/blocks/blocks.1/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.1/blocks/blocks.1/op/Constant_3_output_0 : Float(1, 384, 784, strides=[301056, 784, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.1/blocks/blocks.1/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.1/blocks/blocks.1/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.1/blocks/blocks.1/op/Unsqueeze"](%/layers.1/blocks/blocks.1/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.1/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.1/blocks/blocks.1/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.1/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.1/blocks/blocks.1/op/Unsqueeze_1"](%/layers.1/blocks/blocks.1/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.1/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.1/blocks/blocks.1/op/Unsqueeze_2"](%/layers.1/blocks/blocks.1/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.1/blocks/blocks.1/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.1/blocks/blocks.1/op/Concat"](%/layers.1/blocks/blocks.1/op/Unsqueeze_output_0, %/layers.1/blocks/blocks.1/op/Constant_4_output_0, %/layers.1/blocks/blocks.1/op/Unsqueeze_1_output_0, %/layers.1/blocks/blocks.1/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.1/blocks/blocks.1/op/Reshape_output_0 : Float(*, *, *, *, strides=[301056, 784, 28, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.1/blocks/blocks.1/op/Reshape"](%/layers.1/blocks/blocks.1/op/Constant_3_output_0, %/layers.1/blocks/blocks.1/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.1/blocks/blocks.1/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[301056, 28, 1, 784], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Transpose"](%/layers.1/blocks/blocks.1/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.1/blocks/blocks.1/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.1/op/out_norm/ReduceMean"](%/layers.1/blocks/blocks.1/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Sub"](%/layers.1/blocks/blocks.1/op/out_norm/Transpose_output_0, %/layers.1/blocks/blocks.1/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Pow"](%/layers.1/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.1/blocks/blocks.1/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.1/op/out_norm/ReduceMean_1"](%/layers.1/blocks/blocks.1/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Add"](%/layers.1/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0, %/layers.1/blocks/blocks.1/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Sqrt"](%/layers.1/blocks/blocks.1/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Div"](%/layers.1/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.1/blocks/blocks.1/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Mul"](%/layers.1/blocks/blocks.1/op/out_norm/Div_output_0, %layers.1.blocks.1.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[301056, 10752, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Add_1"](%/layers.1/blocks/blocks.1/op/out_norm/Mul_output_0, %layers.1.blocks.1.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[301056, 1, 10752, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/blocks/blocks.1/op/out_norm/Transpose_1"](%/layers.1/blocks/blocks.1/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.1/op/Cast_output_0 : Float(*, *, *, *, strides=[301056, 1, 10752, 384], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.1/blocks/blocks.1/op/Cast"](%/layers.1/blocks/blocks.1/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.1/blocks/blocks.1/op/out_proj/Conv_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.1/op/out_proj/Conv"](%/layers.1/blocks/blocks.1/op/Cast_output_0, %onnx::Conv_1236), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.1/Add_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/Add"](%/layers.1/blocks/blocks.0/Add_1_output_0, %/layers.1/blocks/blocks.1/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.1/blocks/blocks.1/norm2/Transpose_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.1/blocks/blocks.1/norm2/Transpose"](%/layers.1/blocks/blocks.1/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.1/blocks/blocks.1/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.1/norm2/ReduceMean"](%/layers.1/blocks/blocks.1/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Sub_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Sub[onnx_name="/layers.1/blocks/blocks.1/norm2/Sub"](%/layers.1/blocks/blocks.1/norm2/Transpose_output_0, %/layers.1/blocks/blocks.1/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/blocks/blocks.1/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Pow_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Pow[onnx_name="/layers.1/blocks/blocks.1/norm2/Pow"](%/layers.1/blocks/blocks.1/norm2/Sub_output_0, %/layers.1/blocks/blocks.1/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/blocks/blocks.1/norm2/ReduceMean_1"](%/layers.1/blocks/blocks.1/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/blocks/blocks.1/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/norm2/Add"](%/layers.1/blocks/blocks.1/norm2/ReduceMean_1_output_0, %/layers.1/blocks/blocks.1/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/blocks/blocks.1/norm2/Sqrt"](%/layers.1/blocks/blocks.1/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Div_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.1/norm2/Div"](%/layers.1/blocks/blocks.1/norm2/Sub_output_0, %/layers.1/blocks/blocks.1/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Mul_output_0 : Float(*, *, *, 192, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.1/norm2/Mul"](%/layers.1/blocks/blocks.1/norm2/Div_output_0, %layers.1.blocks.1.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Add_1_output_0 : Float(*, *, *, 192, strides=[150528, 5376, 192, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/norm2/Add_1"](%/layers.1/blocks/blocks.1/norm2/Mul_output_0, %layers.1.blocks.1.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/blocks/blocks.1/norm2/Transpose_1_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/blocks/blocks.1/norm2/Transpose_1"](%/layers.1/blocks/blocks.1/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.1/blocks/blocks.1/mlp/fc1/Conv_output_0 : Float(*, 768, *, *, strides=[602112, 1, 21504, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.1/mlp/fc1/Conv"](%/layers.1/blocks/blocks.1/norm2/Transpose_1_output_0, %onnx::Conv_1238, %layers.1.blocks.1.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.1/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.1/blocks/blocks.1/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Div_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Div[onnx_name="/layers.1/blocks/blocks.1/mlp/act/Div"](%/layers.1/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.1/blocks/blocks.1/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Erf_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.1/blocks/blocks.1/mlp/act/Erf"](%/layers.1/blocks/blocks.1/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.1/blocks/blocks.1/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Add_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/mlp/act/Add"](%/layers.1/blocks/blocks.1/mlp/act/Erf_output_0, %/layers.1/blocks/blocks.1/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Mul_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.1/mlp/act/Mul"](%/layers.1/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.1/blocks/blocks.1/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.1/blocks/blocks.1/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/act/Mul_1_output_0 : Float(*, 768, *, *, strides=[602112, 1, 21504, 768], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.1/blocks/blocks.1/mlp/act/Mul_1"](%/layers.1/blocks/blocks.1/mlp/act/Mul_output_0, %/layers.1/blocks/blocks.1/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.1/blocks/blocks.1/mlp/fc2/Conv_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.1/blocks/blocks.1/mlp/fc2/Conv"](%/layers.1/blocks/blocks.1/mlp/act/Mul_1_output_0, %onnx::Conv_1240, %layers.1.blocks.1.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.1/blocks/blocks.1/Add_1_output_0 : Float(*, 192, *, *, strides=[150528, 1, 5376, 192], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/blocks/blocks.1/Add_1"](%/layers.1/blocks/blocks.1/Add_output_0, %/layers.1/blocks/blocks.1/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.1/downsample/downsample.1/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2], onnx_name="/layers.1/downsample/downsample.1/Conv"](%/layers.1/blocks/blocks.1/Add_1_output_0, %layers.1.downsample.1.weight, %layers.1.downsample.1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/torch.nn.modules.conv.Conv2d::downsample.1 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.1/downsample/downsample.3/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.1/downsample/downsample.3/Transpose"](%/layers.1/downsample/downsample.1/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.1/downsample/downsample.3/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/downsample/downsample.3/ReduceMean"](%/layers.1/downsample/downsample.3/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.1/downsample/downsample.3/Sub"](%/layers.1/downsample/downsample.3/Transpose_output_0, %/layers.1/downsample/downsample.3/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.1/downsample/downsample.3/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.1/downsample/downsample.3/Pow"](%/layers.1/downsample/downsample.3/Sub_output_0, %/layers.1/downsample/downsample.3/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.1/downsample/downsample.3/ReduceMean_1"](%/layers.1/downsample/downsample.3/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.1/downsample/downsample.3/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.1/downsample/downsample.3/Add"](%/layers.1/downsample/downsample.3/ReduceMean_1_output_0, %/layers.1/downsample/downsample.3/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.1/downsample/downsample.3/Sqrt"](%/layers.1/downsample/downsample.3/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.1/downsample/downsample.3/Div"](%/layers.1/downsample/downsample.3/Sub_output_0, %/layers.1/downsample/downsample.3/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.1/downsample/downsample.3/Mul"](%/layers.1/downsample/downsample.3/Div_output_0, %layers.1.downsample.3.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.1/downsample/downsample.3/Add_1"](%/layers.1/downsample/downsample.3/Mul_output_0, %layers.1.downsample.3.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.1/downsample/downsample.3/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.1/downsample/downsample.3/Transpose_1"](%/layers.1/downsample/downsample.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.1/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.0/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.0/norm/ReduceMean"](%/layers.1/downsample/downsample.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.0/norm/Sub"](%/layers.1/downsample/downsample.3/Add_1_output_0, %/layers.2/blocks/blocks.0/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.0/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.0/norm/Pow"](%/layers.2/blocks/blocks.0/norm/Sub_output_0, %/layers.2/blocks/blocks.0/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.0/norm/ReduceMean_1"](%/layers.2/blocks/blocks.0/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.0/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/norm/Add"](%/layers.2/blocks/blocks.0/norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.0/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.0/norm/Sqrt"](%/layers.2/blocks/blocks.0/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.0/norm/Div"](%/layers.2/blocks/blocks.0/norm/Sub_output_0, %/layers.2/blocks/blocks.0/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.0/norm/Mul"](%/layers.2/blocks/blocks.0/norm/Div_output_0, %layers.2.blocks.0.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/norm/Add_1"](%/layers.2/blocks/blocks.0/norm/Mul_output_0, %layers.2.blocks.0.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm/Transpose_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.0/norm/Transpose"](%/layers.2/blocks/blocks.0/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.0/op/in_proj/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.0/op/in_proj/Conv"](%/layers.2/blocks/blocks.0/norm/Transpose_output_0, %onnx::Conv_1242), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.0/op/conv2d/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=768, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.0/op/conv2d/Conv"](%/layers.2/blocks/blocks.0/op/in_proj/Conv_output_0, %layers.2.blocks.0.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.2/blocks/blocks.0/op/act/Sigmoid_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.2/blocks/blocks.0/op/act/Sigmoid"](%/layers.2/blocks/blocks.0/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.0/op/act/Mul_output_0 : Float(*, 768, *, *, strides=[150528, 196, 14, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.0/op/act/Mul"](%/layers.2/blocks/blocks.0/op/conv2d/Conv_output_0, %/layers.2/blocks/blocks.0/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.0/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.0/op/Shape"](%/layers.2/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.2/blocks/blocks.0/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.0/op/Gather"](%/layers.2/blocks/blocks.0/op/Shape_output_0, %/layers.2/blocks/blocks.0/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.0/op/Shape_1"](%/layers.2/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.0/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.0/op/Gather_1"](%/layers.2/blocks/blocks.0/op/Shape_1_output_0, %/layers.2/blocks/blocks.0/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.0/op/Shape_2"](%/layers.2/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.2/blocks/blocks.0/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.0/op/Gather_2"](%/layers.2/blocks/blocks.0/op/Shape_2_output_0, %/layers.2/blocks/blocks.0/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.0/op/Constant_3_output_0 : Float(1, 768, 196, strides=[150528, 196, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.2/blocks/blocks.0/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.2/blocks/blocks.0/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.0/op/Unsqueeze"](%/layers.2/blocks/blocks.0/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.0/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.2/blocks/blocks.0/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.0/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.0/op/Unsqueeze_1"](%/layers.2/blocks/blocks.0/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.0/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.0/op/Unsqueeze_2"](%/layers.2/blocks/blocks.0/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.0/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.2/blocks/blocks.0/op/Concat"](%/layers.2/blocks/blocks.0/op/Unsqueeze_output_0, %/layers.2/blocks/blocks.0/op/Constant_4_output_0, %/layers.2/blocks/blocks.0/op/Unsqueeze_1_output_0, %/layers.2/blocks/blocks.0/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.0/op/Reshape_output_0 : Float(*, *, *, *, strides=[150528, 196, 14, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.2/blocks/blocks.0/op/Reshape"](%/layers.2/blocks/blocks.0/op/Constant_3_output_0, %/layers.2/blocks/blocks.0/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.0/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[150528, 14, 1, 196], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Transpose"](%/layers.2/blocks/blocks.0/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.0/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.0/op/out_norm/ReduceMean"](%/layers.2/blocks/blocks.0/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Sub"](%/layers.2/blocks/blocks.0/op/out_norm/Transpose_output_0, %/layers.2/blocks/blocks.0/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Pow"](%/layers.2/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.0/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.0/op/out_norm/ReduceMean_1"](%/layers.2/blocks/blocks.0/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Add"](%/layers.2/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.0/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Sqrt"](%/layers.2/blocks/blocks.0/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Div"](%/layers.2/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.0/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Mul"](%/layers.2/blocks/blocks.0/op/out_norm/Div_output_0, %layers.2.blocks.0.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[150528, 10752, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Add_1"](%/layers.2/blocks/blocks.0/op/out_norm/Mul_output_0, %layers.2.blocks.0.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.0/op/out_norm/Transpose_1"](%/layers.2/blocks/blocks.0/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.0/op/Cast_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.2/blocks/blocks.0/op/Cast"](%/layers.2/blocks/blocks.0/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.2/blocks/blocks.0/op/out_proj/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.0/op/out_proj/Conv"](%/layers.2/blocks/blocks.0/op/Cast_output_0, %onnx::Conv_1245), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.0/Add_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/Add"](%/layers.1/downsample/downsample.3/Transpose_1_output_0, %/layers.2/blocks/blocks.0/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.2/blocks/blocks.0/norm2/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.0/norm2/Transpose"](%/layers.2/blocks/blocks.0/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.0/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.0/norm2/ReduceMean"](%/layers.2/blocks/blocks.0/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.0/norm2/Sub"](%/layers.2/blocks/blocks.0/norm2/Transpose_output_0, %/layers.2/blocks/blocks.0/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.0/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.0/norm2/Pow"](%/layers.2/blocks/blocks.0/norm2/Sub_output_0, %/layers.2/blocks/blocks.0/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.0/norm2/ReduceMean_1"](%/layers.2/blocks/blocks.0/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.0/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/norm2/Add"](%/layers.2/blocks/blocks.0/norm2/ReduceMean_1_output_0, %/layers.2/blocks/blocks.0/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.0/norm2/Sqrt"](%/layers.2/blocks/blocks.0/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.0/norm2/Div"](%/layers.2/blocks/blocks.0/norm2/Sub_output_0, %/layers.2/blocks/blocks.0/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.0/norm2/Mul"](%/layers.2/blocks/blocks.0/norm2/Div_output_0, %layers.2.blocks.0.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/norm2/Add_1"](%/layers.2/blocks/blocks.0/norm2/Mul_output_0, %layers.2.blocks.0.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.0/norm2/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.0/norm2/Transpose_1"](%/layers.2/blocks/blocks.0/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.0/mlp/fc1/Conv_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.0/mlp/fc1/Conv"](%/layers.2/blocks/blocks.0/norm2/Transpose_1_output_0, %onnx::Conv_1247, %layers.2.blocks.0.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.0/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.2/blocks/blocks.0/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Div_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.0/mlp/act/Div"](%/layers.2/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.0/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Erf_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.2/blocks/blocks.0/mlp/act/Erf"](%/layers.2/blocks/blocks.0/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.2/blocks/blocks.0/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Add_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/mlp/act/Add"](%/layers.2/blocks/blocks.0/mlp/act/Erf_output_0, %/layers.2/blocks/blocks.0/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Mul_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.0/mlp/act/Mul"](%/layers.2/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.0/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.2/blocks/blocks.0/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/act/Mul_1_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.0/mlp/act/Mul_1"](%/layers.2/blocks/blocks.0/mlp/act/Mul_output_0, %/layers.2/blocks/blocks.0/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.0/mlp/fc2/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.0/mlp/fc2/Conv"](%/layers.2/blocks/blocks.0/mlp/act/Mul_1_output_0, %onnx::Conv_1249, %layers.2.blocks.0.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.0/Add_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.0/Add_1"](%/layers.2/blocks/blocks.0/Add_output_0, %/layers.2/blocks/blocks.0/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.2/blocks/blocks.1/norm/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.1/norm/Transpose"](%/layers.2/blocks/blocks.0/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.1/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.1/norm/ReduceMean"](%/layers.2/blocks/blocks.1/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.1/norm/Sub"](%/layers.2/blocks/blocks.1/norm/Transpose_output_0, %/layers.2/blocks/blocks.1/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.1/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.1/norm/Pow"](%/layers.2/blocks/blocks.1/norm/Sub_output_0, %/layers.2/blocks/blocks.1/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.1/norm/ReduceMean_1"](%/layers.2/blocks/blocks.1/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.1/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/norm/Add"](%/layers.2/blocks/blocks.1/norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.1/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.1/norm/Sqrt"](%/layers.2/blocks/blocks.1/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.1/norm/Div"](%/layers.2/blocks/blocks.1/norm/Sub_output_0, %/layers.2/blocks/blocks.1/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.1/norm/Mul"](%/layers.2/blocks/blocks.1/norm/Div_output_0, %layers.2.blocks.1.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/norm/Add_1"](%/layers.2/blocks/blocks.1/norm/Mul_output_0, %layers.2.blocks.1.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.1/norm/Transpose_1"](%/layers.2/blocks/blocks.1/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.1/op/in_proj/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.1/op/in_proj/Conv"](%/layers.2/blocks/blocks.1/norm/Transpose_1_output_0, %onnx::Conv_1251), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.1/op/conv2d/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=768, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.1/op/conv2d/Conv"](%/layers.2/blocks/blocks.1/op/in_proj/Conv_output_0, %layers.2.blocks.1.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.2/blocks/blocks.1/op/act/Sigmoid_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.2/blocks/blocks.1/op/act/Sigmoid"](%/layers.2/blocks/blocks.1/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.1/op/act/Mul_output_0 : Float(*, 768, *, *, strides=[150528, 196, 14, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.1/op/act/Mul"](%/layers.2/blocks/blocks.1/op/conv2d/Conv_output_0, %/layers.2/blocks/blocks.1/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.1/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.1/op/Shape"](%/layers.2/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.2/blocks/blocks.1/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.1/op/Gather"](%/layers.2/blocks/blocks.1/op/Shape_output_0, %/layers.2/blocks/blocks.1/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.1/op/Shape_1"](%/layers.2/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.1/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.1/op/Gather_1"](%/layers.2/blocks/blocks.1/op/Shape_1_output_0, %/layers.2/blocks/blocks.1/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.1/op/Shape_2"](%/layers.2/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.2/blocks/blocks.1/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.1/op/Gather_2"](%/layers.2/blocks/blocks.1/op/Shape_2_output_0, %/layers.2/blocks/blocks.1/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.1/op/Constant_3_output_0 : Float(1, 768, 196, strides=[150528, 196, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.2/blocks/blocks.1/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.2/blocks/blocks.1/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.1/op/Unsqueeze"](%/layers.2/blocks/blocks.1/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.1/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.2/blocks/blocks.1/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.1/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.1/op/Unsqueeze_1"](%/layers.2/blocks/blocks.1/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.1/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.1/op/Unsqueeze_2"](%/layers.2/blocks/blocks.1/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.1/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.2/blocks/blocks.1/op/Concat"](%/layers.2/blocks/blocks.1/op/Unsqueeze_output_0, %/layers.2/blocks/blocks.1/op/Constant_4_output_0, %/layers.2/blocks/blocks.1/op/Unsqueeze_1_output_0, %/layers.2/blocks/blocks.1/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.1/op/Reshape_output_0 : Float(*, *, *, *, strides=[150528, 196, 14, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.2/blocks/blocks.1/op/Reshape"](%/layers.2/blocks/blocks.1/op/Constant_3_output_0, %/layers.2/blocks/blocks.1/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.1/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[150528, 14, 1, 196], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Transpose"](%/layers.2/blocks/blocks.1/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.1/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.1/op/out_norm/ReduceMean"](%/layers.2/blocks/blocks.1/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Sub"](%/layers.2/blocks/blocks.1/op/out_norm/Transpose_output_0, %/layers.2/blocks/blocks.1/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Pow"](%/layers.2/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.1/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.1/op/out_norm/ReduceMean_1"](%/layers.2/blocks/blocks.1/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Add"](%/layers.2/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.1/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Sqrt"](%/layers.2/blocks/blocks.1/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Div"](%/layers.2/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.1/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Mul"](%/layers.2/blocks/blocks.1/op/out_norm/Div_output_0, %layers.2.blocks.1.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[150528, 10752, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Add_1"](%/layers.2/blocks/blocks.1/op/out_norm/Mul_output_0, %layers.2.blocks.1.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.1/op/out_norm/Transpose_1"](%/layers.2/blocks/blocks.1/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.1/op/Cast_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.2/blocks/blocks.1/op/Cast"](%/layers.2/blocks/blocks.1/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.2/blocks/blocks.1/op/out_proj/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.1/op/out_proj/Conv"](%/layers.2/blocks/blocks.1/op/Cast_output_0, %onnx::Conv_1254), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.1/Add_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/Add"](%/layers.2/blocks/blocks.0/Add_1_output_0, %/layers.2/blocks/blocks.1/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.2/blocks/blocks.1/norm2/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.1/norm2/Transpose"](%/layers.2/blocks/blocks.1/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.1/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.1/norm2/ReduceMean"](%/layers.2/blocks/blocks.1/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.1/norm2/Sub"](%/layers.2/blocks/blocks.1/norm2/Transpose_output_0, %/layers.2/blocks/blocks.1/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.1/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.1/norm2/Pow"](%/layers.2/blocks/blocks.1/norm2/Sub_output_0, %/layers.2/blocks/blocks.1/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.1/norm2/ReduceMean_1"](%/layers.2/blocks/blocks.1/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.1/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/norm2/Add"](%/layers.2/blocks/blocks.1/norm2/ReduceMean_1_output_0, %/layers.2/blocks/blocks.1/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.1/norm2/Sqrt"](%/layers.2/blocks/blocks.1/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.1/norm2/Div"](%/layers.2/blocks/blocks.1/norm2/Sub_output_0, %/layers.2/blocks/blocks.1/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.1/norm2/Mul"](%/layers.2/blocks/blocks.1/norm2/Div_output_0, %layers.2.blocks.1.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/norm2/Add_1"](%/layers.2/blocks/blocks.1/norm2/Mul_output_0, %layers.2.blocks.1.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.1/norm2/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.1/norm2/Transpose_1"](%/layers.2/blocks/blocks.1/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.1/mlp/fc1/Conv_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.1/mlp/fc1/Conv"](%/layers.2/blocks/blocks.1/norm2/Transpose_1_output_0, %onnx::Conv_1256, %layers.2.blocks.1.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.1/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.2/blocks/blocks.1/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Div_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.1/mlp/act/Div"](%/layers.2/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.1/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Erf_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.2/blocks/blocks.1/mlp/act/Erf"](%/layers.2/blocks/blocks.1/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.2/blocks/blocks.1/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Add_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/mlp/act/Add"](%/layers.2/blocks/blocks.1/mlp/act/Erf_output_0, %/layers.2/blocks/blocks.1/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Mul_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.1/mlp/act/Mul"](%/layers.2/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.1/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.2/blocks/blocks.1/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/act/Mul_1_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.1/mlp/act/Mul_1"](%/layers.2/blocks/blocks.1/mlp/act/Mul_output_0, %/layers.2/blocks/blocks.1/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.1/mlp/fc2/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.1/mlp/fc2/Conv"](%/layers.2/blocks/blocks.1/mlp/act/Mul_1_output_0, %onnx::Conv_1258, %layers.2.blocks.1.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.1/Add_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.1/Add_1"](%/layers.2/blocks/blocks.1/Add_output_0, %/layers.2/blocks/blocks.1/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.2/blocks/blocks.2/norm/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.2/norm/Transpose"](%/layers.2/blocks/blocks.1/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.2/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.2/norm/ReduceMean"](%/layers.2/blocks/blocks.2/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.2/norm/Sub"](%/layers.2/blocks/blocks.2/norm/Transpose_output_0, %/layers.2/blocks/blocks.2/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.2/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.2/norm/Pow"](%/layers.2/blocks/blocks.2/norm/Sub_output_0, %/layers.2/blocks/blocks.2/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.2/norm/ReduceMean_1"](%/layers.2/blocks/blocks.2/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.2/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/norm/Add"](%/layers.2/blocks/blocks.2/norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.2/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.2/norm/Sqrt"](%/layers.2/blocks/blocks.2/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.2/norm/Div"](%/layers.2/blocks/blocks.2/norm/Sub_output_0, %/layers.2/blocks/blocks.2/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.2/norm/Mul"](%/layers.2/blocks/blocks.2/norm/Div_output_0, %layers.2.blocks.2.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/norm/Add_1"](%/layers.2/blocks/blocks.2/norm/Mul_output_0, %layers.2.blocks.2.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.2/norm/Transpose_1"](%/layers.2/blocks/blocks.2/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.2/op/in_proj/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.2/op/in_proj/Conv"](%/layers.2/blocks/blocks.2/norm/Transpose_1_output_0, %onnx::Conv_1260), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.2/op/conv2d/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=768, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.2/op/conv2d/Conv"](%/layers.2/blocks/blocks.2/op/in_proj/Conv_output_0, %layers.2.blocks.2.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.2/blocks/blocks.2/op/act/Sigmoid_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.2/blocks/blocks.2/op/act/Sigmoid"](%/layers.2/blocks/blocks.2/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.2/op/act/Mul_output_0 : Float(*, 768, *, *, strides=[150528, 196, 14, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.2/op/act/Mul"](%/layers.2/blocks/blocks.2/op/conv2d/Conv_output_0, %/layers.2/blocks/blocks.2/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.2/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.2/op/Shape"](%/layers.2/blocks/blocks.2/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.2/blocks/blocks.2/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.2/op/Gather"](%/layers.2/blocks/blocks.2/op/Shape_output_0, %/layers.2/blocks/blocks.2/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.2/op/Shape_1"](%/layers.2/blocks/blocks.2/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.2/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.2/op/Gather_1"](%/layers.2/blocks/blocks.2/op/Shape_1_output_0, %/layers.2/blocks/blocks.2/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.2/op/Shape_2"](%/layers.2/blocks/blocks.2/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.2/blocks/blocks.2/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.2/op/Gather_2"](%/layers.2/blocks/blocks.2/op/Shape_2_output_0, %/layers.2/blocks/blocks.2/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.2/op/Constant_3_output_0 : Float(1, 768, 196, strides=[150528, 196, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.2/blocks/blocks.2/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.2/blocks/blocks.2/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.2/op/Unsqueeze"](%/layers.2/blocks/blocks.2/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.2/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.2/blocks/blocks.2/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.2/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.2/op/Unsqueeze_1"](%/layers.2/blocks/blocks.2/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.2/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.2/op/Unsqueeze_2"](%/layers.2/blocks/blocks.2/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.2/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.2/blocks/blocks.2/op/Concat"](%/layers.2/blocks/blocks.2/op/Unsqueeze_output_0, %/layers.2/blocks/blocks.2/op/Constant_4_output_0, %/layers.2/blocks/blocks.2/op/Unsqueeze_1_output_0, %/layers.2/blocks/blocks.2/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.2/op/Reshape_output_0 : Float(*, *, *, *, strides=[150528, 196, 14, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.2/blocks/blocks.2/op/Reshape"](%/layers.2/blocks/blocks.2/op/Constant_3_output_0, %/layers.2/blocks/blocks.2/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.2/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[150528, 14, 1, 196], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Transpose"](%/layers.2/blocks/blocks.2/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.2/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.2/op/out_norm/ReduceMean"](%/layers.2/blocks/blocks.2/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Sub"](%/layers.2/blocks/blocks.2/op/out_norm/Transpose_output_0, %/layers.2/blocks/blocks.2/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Pow"](%/layers.2/blocks/blocks.2/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.2/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.2/op/out_norm/ReduceMean_1"](%/layers.2/blocks/blocks.2/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Add"](%/layers.2/blocks/blocks.2/op/out_norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.2/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Sqrt"](%/layers.2/blocks/blocks.2/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Div"](%/layers.2/blocks/blocks.2/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.2/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Mul"](%/layers.2/blocks/blocks.2/op/out_norm/Div_output_0, %layers.2.blocks.2.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[150528, 10752, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Add_1"](%/layers.2/blocks/blocks.2/op/out_norm/Mul_output_0, %layers.2.blocks.2.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.2/op/out_norm/Transpose_1"](%/layers.2/blocks/blocks.2/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.2/op/Cast_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.2/blocks/blocks.2/op/Cast"](%/layers.2/blocks/blocks.2/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.2/blocks/blocks.2/op/out_proj/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.2/op/out_proj/Conv"](%/layers.2/blocks/blocks.2/op/Cast_output_0, %onnx::Conv_1263), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.2/Add_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/Add"](%/layers.2/blocks/blocks.1/Add_1_output_0, %/layers.2/blocks/blocks.2/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.2/blocks/blocks.2/norm2/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.2/norm2/Transpose"](%/layers.2/blocks/blocks.2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.2/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.2/norm2/ReduceMean"](%/layers.2/blocks/blocks.2/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.2/norm2/Sub"](%/layers.2/blocks/blocks.2/norm2/Transpose_output_0, %/layers.2/blocks/blocks.2/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.2/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.2/norm2/Pow"](%/layers.2/blocks/blocks.2/norm2/Sub_output_0, %/layers.2/blocks/blocks.2/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.2/norm2/ReduceMean_1"](%/layers.2/blocks/blocks.2/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.2/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/norm2/Add"](%/layers.2/blocks/blocks.2/norm2/ReduceMean_1_output_0, %/layers.2/blocks/blocks.2/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.2/norm2/Sqrt"](%/layers.2/blocks/blocks.2/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.2/norm2/Div"](%/layers.2/blocks/blocks.2/norm2/Sub_output_0, %/layers.2/blocks/blocks.2/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.2/norm2/Mul"](%/layers.2/blocks/blocks.2/norm2/Div_output_0, %layers.2.blocks.2.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/norm2/Add_1"](%/layers.2/blocks/blocks.2/norm2/Mul_output_0, %layers.2.blocks.2.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.2/norm2/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.2/norm2/Transpose_1"](%/layers.2/blocks/blocks.2/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.2/mlp/fc1/Conv_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.2/mlp/fc1/Conv"](%/layers.2/blocks/blocks.2/norm2/Transpose_1_output_0, %onnx::Conv_1265, %layers.2.blocks.2.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.2/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.2/blocks/blocks.2/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Div_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.2/mlp/act/Div"](%/layers.2/blocks/blocks.2/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.2/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Erf_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.2/blocks/blocks.2/mlp/act/Erf"](%/layers.2/blocks/blocks.2/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.2/blocks/blocks.2/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Add_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/mlp/act/Add"](%/layers.2/blocks/blocks.2/mlp/act/Erf_output_0, %/layers.2/blocks/blocks.2/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Mul_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.2/mlp/act/Mul"](%/layers.2/blocks/blocks.2/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.2/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.2/blocks/blocks.2/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/act/Mul_1_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.2/mlp/act/Mul_1"](%/layers.2/blocks/blocks.2/mlp/act/Mul_output_0, %/layers.2/blocks/blocks.2/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.2/mlp/fc2/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.2/mlp/fc2/Conv"](%/layers.2/blocks/blocks.2/mlp/act/Mul_1_output_0, %onnx::Conv_1267, %layers.2.blocks.2.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.2/Add_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.2/Add_1"](%/layers.2/blocks/blocks.2/Add_output_0, %/layers.2/blocks/blocks.2/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.2 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.2/blocks/blocks.3/norm/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.3/norm/Transpose"](%/layers.2/blocks/blocks.2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.3/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.3/norm/ReduceMean"](%/layers.2/blocks/blocks.3/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.3/norm/Sub"](%/layers.2/blocks/blocks.3/norm/Transpose_output_0, %/layers.2/blocks/blocks.3/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.3/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.3/norm/Pow"](%/layers.2/blocks/blocks.3/norm/Sub_output_0, %/layers.2/blocks/blocks.3/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.3/norm/ReduceMean_1"](%/layers.2/blocks/blocks.3/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.3/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/norm/Add"](%/layers.2/blocks/blocks.3/norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.3/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.3/norm/Sqrt"](%/layers.2/blocks/blocks.3/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.3/norm/Div"](%/layers.2/blocks/blocks.3/norm/Sub_output_0, %/layers.2/blocks/blocks.3/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.3/norm/Mul"](%/layers.2/blocks/blocks.3/norm/Div_output_0, %layers.2.blocks.3.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/norm/Add_1"](%/layers.2/blocks/blocks.3/norm/Mul_output_0, %layers.2.blocks.3.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.3/norm/Transpose_1"](%/layers.2/blocks/blocks.3/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.3/op/in_proj/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.3/op/in_proj/Conv"](%/layers.2/blocks/blocks.3/norm/Transpose_1_output_0, %onnx::Conv_1269), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.3/op/conv2d/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=768, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.3/op/conv2d/Conv"](%/layers.2/blocks/blocks.3/op/in_proj/Conv_output_0, %layers.2.blocks.3.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.2/blocks/blocks.3/op/act/Sigmoid_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.2/blocks/blocks.3/op/act/Sigmoid"](%/layers.2/blocks/blocks.3/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.3/op/act/Mul_output_0 : Float(*, 768, *, *, strides=[150528, 196, 14, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.3/op/act/Mul"](%/layers.2/blocks/blocks.3/op/conv2d/Conv_output_0, %/layers.2/blocks/blocks.3/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.3/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.3/op/Shape"](%/layers.2/blocks/blocks.3/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.2/blocks/blocks.3/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.3/op/Gather"](%/layers.2/blocks/blocks.3/op/Shape_output_0, %/layers.2/blocks/blocks.3/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.3/op/Shape_1"](%/layers.2/blocks/blocks.3/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.3/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.3/op/Gather_1"](%/layers.2/blocks/blocks.3/op/Shape_1_output_0, %/layers.2/blocks/blocks.3/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.3/op/Shape_2"](%/layers.2/blocks/blocks.3/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.2/blocks/blocks.3/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.3/op/Gather_2"](%/layers.2/blocks/blocks.3/op/Shape_2_output_0, %/layers.2/blocks/blocks.3/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.3/op/Constant_3_output_0 : Float(1, 768, 196, strides=[150528, 196, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.2/blocks/blocks.3/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.2/blocks/blocks.3/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.3/op/Unsqueeze"](%/layers.2/blocks/blocks.3/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.3/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.2/blocks/blocks.3/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.3/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.3/op/Unsqueeze_1"](%/layers.2/blocks/blocks.3/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.3/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.3/op/Unsqueeze_2"](%/layers.2/blocks/blocks.3/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.3/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.2/blocks/blocks.3/op/Concat"](%/layers.2/blocks/blocks.3/op/Unsqueeze_output_0, %/layers.2/blocks/blocks.3/op/Constant_4_output_0, %/layers.2/blocks/blocks.3/op/Unsqueeze_1_output_0, %/layers.2/blocks/blocks.3/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.3/op/Reshape_output_0 : Float(*, *, *, *, strides=[150528, 196, 14, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.2/blocks/blocks.3/op/Reshape"](%/layers.2/blocks/blocks.3/op/Constant_3_output_0, %/layers.2/blocks/blocks.3/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.3/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[150528, 14, 1, 196], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Transpose"](%/layers.2/blocks/blocks.3/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.3/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.3/op/out_norm/ReduceMean"](%/layers.2/blocks/blocks.3/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Sub"](%/layers.2/blocks/blocks.3/op/out_norm/Transpose_output_0, %/layers.2/blocks/blocks.3/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Pow"](%/layers.2/blocks/blocks.3/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.3/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.3/op/out_norm/ReduceMean_1"](%/layers.2/blocks/blocks.3/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Add"](%/layers.2/blocks/blocks.3/op/out_norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.3/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Sqrt"](%/layers.2/blocks/blocks.3/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Div"](%/layers.2/blocks/blocks.3/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.3/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Mul"](%/layers.2/blocks/blocks.3/op/out_norm/Div_output_0, %layers.2.blocks.3.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[150528, 10752, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Add_1"](%/layers.2/blocks/blocks.3/op/out_norm/Mul_output_0, %layers.2.blocks.3.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.3/op/out_norm/Transpose_1"](%/layers.2/blocks/blocks.3/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.3/op/Cast_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.2/blocks/blocks.3/op/Cast"](%/layers.2/blocks/blocks.3/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.2/blocks/blocks.3/op/out_proj/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.3/op/out_proj/Conv"](%/layers.2/blocks/blocks.3/op/Cast_output_0, %onnx::Conv_1272), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.3/Add_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/Add"](%/layers.2/blocks/blocks.2/Add_1_output_0, %/layers.2/blocks/blocks.3/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.2/blocks/blocks.3/norm2/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.3/norm2/Transpose"](%/layers.2/blocks/blocks.3/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.3/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.3/norm2/ReduceMean"](%/layers.2/blocks/blocks.3/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.3/norm2/Sub"](%/layers.2/blocks/blocks.3/norm2/Transpose_output_0, %/layers.2/blocks/blocks.3/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.3/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.3/norm2/Pow"](%/layers.2/blocks/blocks.3/norm2/Sub_output_0, %/layers.2/blocks/blocks.3/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.3/norm2/ReduceMean_1"](%/layers.2/blocks/blocks.3/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.3/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/norm2/Add"](%/layers.2/blocks/blocks.3/norm2/ReduceMean_1_output_0, %/layers.2/blocks/blocks.3/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.3/norm2/Sqrt"](%/layers.2/blocks/blocks.3/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.3/norm2/Div"](%/layers.2/blocks/blocks.3/norm2/Sub_output_0, %/layers.2/blocks/blocks.3/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.3/norm2/Mul"](%/layers.2/blocks/blocks.3/norm2/Div_output_0, %layers.2.blocks.3.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/norm2/Add_1"](%/layers.2/blocks/blocks.3/norm2/Mul_output_0, %layers.2.blocks.3.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.3/norm2/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.3/norm2/Transpose_1"](%/layers.2/blocks/blocks.3/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.3/mlp/fc1/Conv_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.3/mlp/fc1/Conv"](%/layers.2/blocks/blocks.3/norm2/Transpose_1_output_0, %onnx::Conv_1274, %layers.2.blocks.3.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.3/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.2/blocks/blocks.3/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Div_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.3/mlp/act/Div"](%/layers.2/blocks/blocks.3/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.3/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Erf_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.2/blocks/blocks.3/mlp/act/Erf"](%/layers.2/blocks/blocks.3/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.2/blocks/blocks.3/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Add_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/mlp/act/Add"](%/layers.2/blocks/blocks.3/mlp/act/Erf_output_0, %/layers.2/blocks/blocks.3/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Mul_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.3/mlp/act/Mul"](%/layers.2/blocks/blocks.3/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.3/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.2/blocks/blocks.3/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/act/Mul_1_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.3/mlp/act/Mul_1"](%/layers.2/blocks/blocks.3/mlp/act/Mul_output_0, %/layers.2/blocks/blocks.3/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.3/mlp/fc2/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.3/mlp/fc2/Conv"](%/layers.2/blocks/blocks.3/mlp/act/Mul_1_output_0, %onnx::Conv_1276, %layers.2.blocks.3.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.3/Add_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.3/Add_1"](%/layers.2/blocks/blocks.3/Add_output_0, %/layers.2/blocks/blocks.3/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.2/blocks/blocks.4/norm/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.4/norm/Transpose"](%/layers.2/blocks/blocks.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.4/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.4/norm/ReduceMean"](%/layers.2/blocks/blocks.4/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.4/norm/Sub"](%/layers.2/blocks/blocks.4/norm/Transpose_output_0, %/layers.2/blocks/blocks.4/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.4/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.4/norm/Pow"](%/layers.2/blocks/blocks.4/norm/Sub_output_0, %/layers.2/blocks/blocks.4/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.4/norm/ReduceMean_1"](%/layers.2/blocks/blocks.4/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.4/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/norm/Add"](%/layers.2/blocks/blocks.4/norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.4/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.4/norm/Sqrt"](%/layers.2/blocks/blocks.4/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.4/norm/Div"](%/layers.2/blocks/blocks.4/norm/Sub_output_0, %/layers.2/blocks/blocks.4/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.4/norm/Mul"](%/layers.2/blocks/blocks.4/norm/Div_output_0, %layers.2.blocks.4.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/norm/Add_1"](%/layers.2/blocks/blocks.4/norm/Mul_output_0, %layers.2.blocks.4.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.4/norm/Transpose_1"](%/layers.2/blocks/blocks.4/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.4/op/in_proj/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.4/op/in_proj/Conv"](%/layers.2/blocks/blocks.4/norm/Transpose_1_output_0, %onnx::Conv_1278), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.4/op/conv2d/Conv_output_0 : Float(*, 768, *, *, strides=[150528, 1, 10752, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=768, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.4/op/conv2d/Conv"](%/layers.2/blocks/blocks.4/op/in_proj/Conv_output_0, %layers.2.blocks.4.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.2/blocks/blocks.4/op/act/Sigmoid_output_0 : Float(*, 768, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.2/blocks/blocks.4/op/act/Sigmoid"](%/layers.2/blocks/blocks.4/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.4/op/act/Mul_output_0 : Float(*, 768, *, *, strides=[150528, 196, 14, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.4/op/act/Mul"](%/layers.2/blocks/blocks.4/op/conv2d/Conv_output_0, %/layers.2/blocks/blocks.4/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.2/blocks/blocks.4/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.4/op/Shape"](%/layers.2/blocks/blocks.4/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.2/blocks/blocks.4/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.4/op/Gather"](%/layers.2/blocks/blocks.4/op/Shape_output_0, %/layers.2/blocks/blocks.4/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.4/op/Shape_1"](%/layers.2/blocks/blocks.4/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.4/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.4/op/Gather_1"](%/layers.2/blocks/blocks.4/op/Shape_1_output_0, %/layers.2/blocks/blocks.4/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.2/blocks/blocks.4/op/Shape_2"](%/layers.2/blocks/blocks.4/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.2/blocks/blocks.4/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.2/blocks/blocks.4/op/Gather_2"](%/layers.2/blocks/blocks.4/op/Shape_2_output_0, %/layers.2/blocks/blocks.4/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.2/blocks/blocks.4/op/Constant_3_output_0 : Float(1, 768, 196, strides=[150528, 196, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.2/blocks/blocks.4/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.2/blocks/blocks.4/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.4/op/Unsqueeze"](%/layers.2/blocks/blocks.4/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.4/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.2/blocks/blocks.4/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.4/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.4/op/Unsqueeze_1"](%/layers.2/blocks/blocks.4/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.4/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.2/blocks/blocks.4/op/Unsqueeze_2"](%/layers.2/blocks/blocks.4/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op
  %/layers.2/blocks/blocks.4/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.2/blocks/blocks.4/op/Concat"](%/layers.2/blocks/blocks.4/op/Unsqueeze_output_0, %/layers.2/blocks/blocks.4/op/Constant_4_output_0, %/layers.2/blocks/blocks.4/op/Unsqueeze_1_output_0, %/layers.2/blocks/blocks.4/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.4/op/Reshape_output_0 : Float(*, *, *, *, strides=[150528, 196, 14, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.2/blocks/blocks.4/op/Reshape"](%/layers.2/blocks/blocks.4/op/Constant_3_output_0, %/layers.2/blocks/blocks.4/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.2/blocks/blocks.4/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[150528, 14, 1, 196], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Transpose"](%/layers.2/blocks/blocks.4/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.4/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.4/op/out_norm/ReduceMean"](%/layers.2/blocks/blocks.4/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Sub"](%/layers.2/blocks/blocks.4/op/out_norm/Transpose_output_0, %/layers.2/blocks/blocks.4/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Pow"](%/layers.2/blocks/blocks.4/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.4/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.4/op/out_norm/ReduceMean_1"](%/layers.2/blocks/blocks.4/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Add"](%/layers.2/blocks/blocks.4/op/out_norm/ReduceMean_1_output_0, %/layers.2/blocks/blocks.4/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Sqrt"](%/layers.2/blocks/blocks.4/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Div"](%/layers.2/blocks/blocks.4/op/out_norm/Sub_output_0, %/layers.2/blocks/blocks.4/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Mul"](%/layers.2/blocks/blocks.4/op/out_norm/Div_output_0, %layers.2.blocks.4.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[150528, 10752, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Add_1"](%/layers.2/blocks/blocks.4/op/out_norm/Mul_output_0, %layers.2.blocks.4.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.4/op/out_norm/Transpose_1"](%/layers.2/blocks/blocks.4/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.4/op/Cast_output_0 : Float(*, *, *, *, strides=[150528, 1, 10752, 768], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.2/blocks/blocks.4/op/Cast"](%/layers.2/blocks/blocks.4/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.2/blocks/blocks.4/op/out_proj/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.4/op/out_proj/Conv"](%/layers.2/blocks/blocks.4/op/Cast_output_0, %onnx::Conv_1281), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.4/Add_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/Add"](%/layers.2/blocks/blocks.3/Add_1_output_0, %/layers.2/blocks/blocks.4/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.2/blocks/blocks.4/norm2/Transpose_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/blocks/blocks.4/norm2/Transpose"](%/layers.2/blocks/blocks.4/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/blocks/blocks.4/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.4/norm2/ReduceMean"](%/layers.2/blocks/blocks.4/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Sub_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Sub[onnx_name="/layers.2/blocks/blocks.4/norm2/Sub"](%/layers.2/blocks/blocks.4/norm2/Transpose_output_0, %/layers.2/blocks/blocks.4/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/blocks/blocks.4/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Pow_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Pow[onnx_name="/layers.2/blocks/blocks.4/norm2/Pow"](%/layers.2/blocks/blocks.4/norm2/Sub_output_0, %/layers.2/blocks/blocks.4/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/blocks/blocks.4/norm2/ReduceMean_1"](%/layers.2/blocks/blocks.4/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/blocks/blocks.4/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/norm2/Add"](%/layers.2/blocks/blocks.4/norm2/ReduceMean_1_output_0, %/layers.2/blocks/blocks.4/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/blocks/blocks.4/norm2/Sqrt"](%/layers.2/blocks/blocks.4/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Div_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.4/norm2/Div"](%/layers.2/blocks/blocks.4/norm2/Sub_output_0, %/layers.2/blocks/blocks.4/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Mul_output_0 : Float(*, *, *, 384, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.4/norm2/Mul"](%/layers.2/blocks/blocks.4/norm2/Div_output_0, %layers.2.blocks.4.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Add_1_output_0 : Float(*, *, *, 384, strides=[75264, 5376, 384, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/norm2/Add_1"](%/layers.2/blocks/blocks.4/norm2/Mul_output_0, %layers.2.blocks.4.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/blocks/blocks.4/norm2/Transpose_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/blocks/blocks.4/norm2/Transpose_1"](%/layers.2/blocks/blocks.4/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.2/blocks/blocks.4/mlp/fc1/Conv_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.4/mlp/fc1/Conv"](%/layers.2/blocks/blocks.4/norm2/Transpose_1_output_0, %onnx::Conv_1283, %layers.2.blocks.4.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.4/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.2/blocks/blocks.4/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Div_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Div[onnx_name="/layers.2/blocks/blocks.4/mlp/act/Div"](%/layers.2/blocks/blocks.4/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.4/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Erf_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.2/blocks/blocks.4/mlp/act/Erf"](%/layers.2/blocks/blocks.4/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.2/blocks/blocks.4/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Add_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/mlp/act/Add"](%/layers.2/blocks/blocks.4/mlp/act/Erf_output_0, %/layers.2/blocks/blocks.4/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Mul_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.4/mlp/act/Mul"](%/layers.2/blocks/blocks.4/mlp/fc1/Conv_output_0, %/layers.2/blocks/blocks.4/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.2/blocks/blocks.4/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/act/Mul_1_output_0 : Float(*, 1536, *, *, strides=[301056, 1, 21504, 1536], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.2/blocks/blocks.4/mlp/act/Mul_1"](%/layers.2/blocks/blocks.4/mlp/act/Mul_output_0, %/layers.2/blocks/blocks.4/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.2/blocks/blocks.4/mlp/fc2/Conv_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.2/blocks/blocks.4/mlp/fc2/Conv"](%/layers.2/blocks/blocks.4/mlp/act/Mul_1_output_0, %onnx::Conv_1285, %layers.2.blocks.4.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.2/blocks/blocks.4/Add_1_output_0 : Float(*, 384, *, *, strides=[75264, 1, 5376, 384], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/blocks/blocks.4/Add_1"](%/layers.2/blocks/blocks.4/Add_output_0, %/layers.2/blocks/blocks.4/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.4 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.2/downsample/downsample.1/Conv_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2], onnx_name="/layers.2/downsample/downsample.1/Conv"](%/layers.2/blocks/blocks.4/Add_1_output_0, %layers.2.downsample.1.weight, %layers.2.downsample.1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/torch.nn.modules.conv.Conv2d::downsample.1 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.2/downsample/downsample.3/Transpose_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.2/downsample/downsample.3/Transpose"](%/layers.2/downsample/downsample.1/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.2/downsample/downsample.3/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/downsample/downsample.3/ReduceMean"](%/layers.2/downsample/downsample.3/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Sub_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Sub[onnx_name="/layers.2/downsample/downsample.3/Sub"](%/layers.2/downsample/downsample.3/Transpose_output_0, %/layers.2/downsample/downsample.3/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.2/downsample/downsample.3/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Pow_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Pow[onnx_name="/layers.2/downsample/downsample.3/Pow"](%/layers.2/downsample/downsample.3/Sub_output_0, %/layers.2/downsample/downsample.3/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.2/downsample/downsample.3/ReduceMean_1"](%/layers.2/downsample/downsample.3/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.2/downsample/downsample.3/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.2/downsample/downsample.3/Add"](%/layers.2/downsample/downsample.3/ReduceMean_1_output_0, %/layers.2/downsample/downsample.3/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.2/downsample/downsample.3/Sqrt"](%/layers.2/downsample/downsample.3/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Div_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Div[onnx_name="/layers.2/downsample/downsample.3/Div"](%/layers.2/downsample/downsample.3/Sub_output_0, %/layers.2/downsample/downsample.3/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Mul_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Mul[onnx_name="/layers.2/downsample/downsample.3/Mul"](%/layers.2/downsample/downsample.3/Div_output_0, %layers.2.downsample.3.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Add_1_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.2/downsample/downsample.3/Add_1"](%/layers.2/downsample/downsample.3/Mul_output_0, %layers.2.downsample.3.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.2/downsample/downsample.3/Transpose_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.2/downsample/downsample.3/Transpose_1"](%/layers.2/downsample/downsample.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.2/torch.nn.modules.container.Sequential::downsample/models.vmamba.LayerNorm2d::downsample.3 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.0/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.0/norm/ReduceMean"](%/layers.2/downsample/downsample.3/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Sub_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Sub[onnx_name="/layers.3/blocks/blocks.0/norm/Sub"](%/layers.2/downsample/downsample.3/Add_1_output_0, %/layers.3/blocks/blocks.0/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.0/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Pow_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Pow[onnx_name="/layers.3/blocks/blocks.0/norm/Pow"](%/layers.3/blocks/blocks.0/norm/Sub_output_0, %/layers.3/blocks/blocks.0/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.0/norm/ReduceMean_1"](%/layers.3/blocks/blocks.0/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.3/blocks/blocks.0/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/norm/Add"](%/layers.3/blocks/blocks.0/norm/ReduceMean_1_output_0, %/layers.3/blocks/blocks.0/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.3/blocks/blocks.0/norm/Sqrt"](%/layers.3/blocks/blocks.0/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Div_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.0/norm/Div"](%/layers.3/blocks/blocks.0/norm/Sub_output_0, %/layers.3/blocks/blocks.0/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Mul_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.0/norm/Mul"](%/layers.3/blocks/blocks.0/norm/Div_output_0, %layers.3.blocks.0.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Add_1_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/norm/Add_1"](%/layers.3/blocks/blocks.0/norm/Mul_output_0, %layers.3.blocks.0.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm/Transpose_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.3/blocks/blocks.0/norm/Transpose"](%/layers.3/blocks/blocks.0/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.0/op/in_proj/Conv_output_0 : Float(*, 1536, *, *, strides=[75264, 1, 10752, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.0/op/in_proj/Conv"](%/layers.3/blocks/blocks.0/norm/Transpose_output_0, %onnx::Conv_1287), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.0/op/conv2d/Conv_output_0 : Float(*, 1536, *, *, strides=[75264, 1, 10752, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1536, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.0/op/conv2d/Conv"](%/layers.3/blocks/blocks.0/op/in_proj/Conv_output_0, %layers.3.blocks.0.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.3/blocks/blocks.0/op/act/Sigmoid_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.3/blocks/blocks.0/op/act/Sigmoid"](%/layers.3/blocks/blocks.0/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.3/blocks/blocks.0/op/act/Mul_output_0 : Float(*, 1536, *, *, strides=[75264, 49, 7, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.0/op/act/Mul"](%/layers.3/blocks/blocks.0/op/conv2d/Conv_output_0, %/layers.3/blocks/blocks.0/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.3/blocks/blocks.0/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.3/blocks/blocks.0/op/Shape"](%/layers.3/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.3/blocks/blocks.0/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.3/blocks/blocks.0/op/Gather"](%/layers.3/blocks/blocks.0/op/Shape_output_0, %/layers.3/blocks/blocks.0/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.3/blocks/blocks.0/op/Shape_1"](%/layers.3/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.0/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.3/blocks/blocks.0/op/Gather_1"](%/layers.3/blocks/blocks.0/op/Shape_1_output_0, %/layers.3/blocks/blocks.0/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.3/blocks/blocks.0/op/Shape_2"](%/layers.3/blocks/blocks.0/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.3/blocks/blocks.0/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.3/blocks/blocks.0/op/Gather_2"](%/layers.3/blocks/blocks.0/op/Shape_2_output_0, %/layers.3/blocks/blocks.0/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.0/op/Constant_3_output_0 : Float(1, 1536, 49, strides=[75264, 49, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.3/blocks/blocks.0/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.3/blocks/blocks.0/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.3/blocks/blocks.0/op/Unsqueeze"](%/layers.3/blocks/blocks.0/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.0/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.3/blocks/blocks.0/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.0/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.3/blocks/blocks.0/op/Unsqueeze_1"](%/layers.3/blocks/blocks.0/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.0/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.3/blocks/blocks.0/op/Unsqueeze_2"](%/layers.3/blocks/blocks.0/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.0/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.3/blocks/blocks.0/op/Concat"](%/layers.3/blocks/blocks.0/op/Unsqueeze_output_0, %/layers.3/blocks/blocks.0/op/Constant_4_output_0, %/layers.3/blocks/blocks.0/op/Unsqueeze_1_output_0, %/layers.3/blocks/blocks.0/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.3/blocks/blocks.0/op/Reshape_output_0 : Float(*, *, *, *, strides=[75264, 49, 7, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.3/blocks/blocks.0/op/Reshape"](%/layers.3/blocks/blocks.0/op/Constant_3_output_0, %/layers.3/blocks/blocks.0/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.3/blocks/blocks.0/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[75264, 7, 1, 49], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Transpose"](%/layers.3/blocks/blocks.0/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.3/blocks/blocks.0/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.0/op/out_norm/ReduceMean"](%/layers.3/blocks/blocks.0/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Sub"](%/layers.3/blocks/blocks.0/op/out_norm/Transpose_output_0, %/layers.3/blocks/blocks.0/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Pow"](%/layers.3/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.3/blocks/blocks.0/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.0/op/out_norm/ReduceMean_1"](%/layers.3/blocks/blocks.0/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Add"](%/layers.3/blocks/blocks.0/op/out_norm/ReduceMean_1_output_0, %/layers.3/blocks/blocks.0/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Sqrt"](%/layers.3/blocks/blocks.0/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Div"](%/layers.3/blocks/blocks.0/op/out_norm/Sub_output_0, %/layers.3/blocks/blocks.0/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Mul"](%/layers.3/blocks/blocks.0/op/out_norm/Div_output_0, %layers.3.blocks.0.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[75264, 10752, 1536, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Add_1"](%/layers.3/blocks/blocks.0/op/out_norm/Mul_output_0, %layers.3.blocks.0.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[75264, 1, 10752, 1536], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.3/blocks/blocks.0/op/out_norm/Transpose_1"](%/layers.3/blocks/blocks.0/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.0/op/Cast_output_0 : Float(*, *, *, *, strides=[75264, 1, 10752, 1536], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.3/blocks/blocks.0/op/Cast"](%/layers.3/blocks/blocks.0/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.3/blocks/blocks.0/op/out_proj/Conv_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.0/op/out_proj/Conv"](%/layers.3/blocks/blocks.0/op/Cast_output_0, %onnx::Conv_1290), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.0/Add_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/Add"](%/layers.2/downsample/downsample.3/Transpose_1_output_0, %/layers.3/blocks/blocks.0/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.3/blocks/blocks.0/norm2/Transpose_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.3/blocks/blocks.0/norm2/Transpose"](%/layers.3/blocks/blocks.0/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.3/blocks/blocks.0/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.0/norm2/ReduceMean"](%/layers.3/blocks/blocks.0/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Sub_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Sub[onnx_name="/layers.3/blocks/blocks.0/norm2/Sub"](%/layers.3/blocks/blocks.0/norm2/Transpose_output_0, %/layers.3/blocks/blocks.0/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.0/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Pow_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Pow[onnx_name="/layers.3/blocks/blocks.0/norm2/Pow"](%/layers.3/blocks/blocks.0/norm2/Sub_output_0, %/layers.3/blocks/blocks.0/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.0/norm2/ReduceMean_1"](%/layers.3/blocks/blocks.0/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.3/blocks/blocks.0/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/norm2/Add"](%/layers.3/blocks/blocks.0/norm2/ReduceMean_1_output_0, %/layers.3/blocks/blocks.0/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.3/blocks/blocks.0/norm2/Sqrt"](%/layers.3/blocks/blocks.0/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Div_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.0/norm2/Div"](%/layers.3/blocks/blocks.0/norm2/Sub_output_0, %/layers.3/blocks/blocks.0/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Mul_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.0/norm2/Mul"](%/layers.3/blocks/blocks.0/norm2/Div_output_0, %layers.3.blocks.0.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Add_1_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/norm2/Add_1"](%/layers.3/blocks/blocks.0/norm2/Mul_output_0, %layers.3.blocks.0.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.0/norm2/Transpose_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.3/blocks/blocks.0/norm2/Transpose_1"](%/layers.3/blocks/blocks.0/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.0/mlp/fc1/Conv_output_0 : Float(*, 3072, *, *, strides=[150528, 1, 21504, 3072], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.0/mlp/fc1/Conv"](%/layers.3/blocks/blocks.0/norm2/Transpose_1_output_0, %onnx::Conv_1292, %layers.3.blocks.0.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.0/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.3/blocks/blocks.0/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Div_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.0/mlp/act/Div"](%/layers.3/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.3/blocks/blocks.0/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Erf_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.3/blocks/blocks.0/mlp/act/Erf"](%/layers.3/blocks/blocks.0/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.3/blocks/blocks.0/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Add_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/mlp/act/Add"](%/layers.3/blocks/blocks.0/mlp/act/Erf_output_0, %/layers.3/blocks/blocks.0/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Mul_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.0/mlp/act/Mul"](%/layers.3/blocks/blocks.0/mlp/fc1/Conv_output_0, %/layers.3/blocks/blocks.0/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.3/blocks/blocks.0/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/act/Mul_1_output_0 : Float(*, 3072, *, *, strides=[150528, 1, 21504, 3072], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.0/mlp/act/Mul_1"](%/layers.3/blocks/blocks.0/mlp/act/Mul_output_0, %/layers.3/blocks/blocks.0/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.0/mlp/fc2/Conv_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.0/mlp/fc2/Conv"](%/layers.3/blocks/blocks.0/mlp/act/Mul_1_output_0, %onnx::Conv_1294, %layers.3.blocks.0.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.0/Add_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.0/Add_1"](%/layers.3/blocks/blocks.0/Add_output_0, %/layers.3/blocks/blocks.0/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.0 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/layers.3/blocks/blocks.1/norm/Transpose_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.3/blocks/blocks.1/norm/Transpose"](%/layers.3/blocks/blocks.0/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.3/blocks/blocks.1/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.1/norm/ReduceMean"](%/layers.3/blocks/blocks.1/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Sub_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Sub[onnx_name="/layers.3/blocks/blocks.1/norm/Sub"](%/layers.3/blocks/blocks.1/norm/Transpose_output_0, %/layers.3/blocks/blocks.1/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.1/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Pow_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Pow[onnx_name="/layers.3/blocks/blocks.1/norm/Pow"](%/layers.3/blocks/blocks.1/norm/Sub_output_0, %/layers.3/blocks/blocks.1/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.1/norm/ReduceMean_1"](%/layers.3/blocks/blocks.1/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.3/blocks/blocks.1/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/norm/Add"](%/layers.3/blocks/blocks.1/norm/ReduceMean_1_output_0, %/layers.3/blocks/blocks.1/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.3/blocks/blocks.1/norm/Sqrt"](%/layers.3/blocks/blocks.1/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Div_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.1/norm/Div"](%/layers.3/blocks/blocks.1/norm/Sub_output_0, %/layers.3/blocks/blocks.1/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Mul_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.1/norm/Mul"](%/layers.3/blocks/blocks.1/norm/Div_output_0, %layers.3.blocks.1.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Add_1_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/norm/Add_1"](%/layers.3/blocks/blocks.1/norm/Mul_output_0, %layers.3.blocks.1.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm/Transpose_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.3/blocks/blocks.1/norm/Transpose_1"](%/layers.3/blocks/blocks.1/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.1/op/in_proj/Conv_output_0 : Float(*, 1536, *, *, strides=[75264, 1, 10752, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.1/op/in_proj/Conv"](%/layers.3/blocks/blocks.1/norm/Transpose_1_output_0, %onnx::Conv_1296), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::in_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.1/op/conv2d/Conv_output_0 : Float(*, 1536, *, *, strides=[75264, 1, 10752, 1536], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1536, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.1/op/conv2d/Conv"](%/layers.3/blocks/blocks.1/op/in_proj/Conv_output_0, %layers.3.blocks.1.op.conv2d.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.conv.Conv2d::conv2d # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/conv.py:456:0
  %/layers.3/blocks/blocks.1/op/act/Sigmoid_output_0 : Float(*, 1536, *, *, device=cpu) = onnx::Sigmoid[onnx_name="/layers.3/blocks/blocks.1/op/act/Sigmoid"](%/layers.3/blocks/blocks.1/op/conv2d/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.3/blocks/blocks.1/op/act/Mul_output_0 : Float(*, 1536, *, *, strides=[75264, 49, 7, 1], requires_grad=0, device=cuda:0) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.1/op/act/Mul"](%/layers.3/blocks/blocks.1/op/conv2d/Conv_output_0, %/layers.3/blocks/blocks.1/op/act/Sigmoid_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/torch.nn.modules.activation.SiLU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2102:0
  %/layers.3/blocks/blocks.1/op/Shape_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.3/blocks/blocks.1/op/Shape"](%/layers.3/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Constant_output_0 : Long(device=cpu) = onnx::Constant[value={0}, onnx_name="/layers.3/blocks/blocks.1/op/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Gather_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.3/blocks/blocks.1/op/Gather"](%/layers.3/blocks/blocks.1/op/Shape_output_0, %/layers.3/blocks/blocks.1/op/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Shape_1_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.3/blocks/blocks.1/op/Shape_1"](%/layers.3/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Constant_1_output_0 : Long(device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.1/op/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Gather_1_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.3/blocks/blocks.1/op/Gather_1"](%/layers.3/blocks/blocks.1/op/Shape_1_output_0, %/layers.3/blocks/blocks.1/op/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Shape_2_output_0 : Long(4, strides=[1], device=cpu) = onnx::Shape[onnx_name="/layers.3/blocks/blocks.1/op/Shape_2"](%/layers.3/blocks/blocks.1/op/act/Mul_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Constant_2_output_0 : Long(device=cpu) = onnx::Constant[value={3}, onnx_name="/layers.3/blocks/blocks.1/op/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Gather_2_output_0 : Long(device=cpu) = onnx::Gather[axis=0, onnx_name="/layers.3/blocks/blocks.1/op/Gather_2"](%/layers.3/blocks/blocks.1/op/Shape_2_output_0, %/layers.3/blocks/blocks.1/op/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:566:0
  %/layers.3/blocks/blocks.1/op/Constant_3_output_0 : Float(1, 1536, 49, strides=[75264, 49, 1], requires_grad=0, device=cpu) = onnx::Constant[value=<Tensor>, onnx_name="/layers.3/blocks/blocks.1/op/Constant_3"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/csm_triton.py:200:0
  %/layers.3/blocks/blocks.1/op/Unsqueeze_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.3/blocks/blocks.1/op/Unsqueeze"](%/layers.3/blocks/blocks.1/op/Gather_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.1/op/Constant_4_output_0 : Long(1, strides=[1], requires_grad=0, device=cpu) = onnx::Constant[value={-1}, onnx_name="/layers.3/blocks/blocks.1/op/Constant_4"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.1/op/Unsqueeze_1_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.3/blocks/blocks.1/op/Unsqueeze_1"](%/layers.3/blocks/blocks.1/op/Gather_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.1/op/Unsqueeze_2_output_0 : Long(1, strides=[1], device=cpu) = onnx::Unsqueeze[axes=[0], onnx_name="/layers.3/blocks/blocks.1/op/Unsqueeze_2"](%/layers.3/blocks/blocks.1/op/Gather_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op
  %/layers.3/blocks/blocks.1/op/Concat_output_0 : Long(4, strides=[1], device=cpu) = onnx::Concat[axis=0, onnx_name="/layers.3/blocks/blocks.1/op/Concat"](%/layers.3/blocks/blocks.1/op/Unsqueeze_output_0, %/layers.3/blocks/blocks.1/op/Constant_4_output_0, %/layers.3/blocks/blocks.1/op/Unsqueeze_1_output_0, %/layers.3/blocks/blocks.1/op/Unsqueeze_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.3/blocks/blocks.1/op/Reshape_output_0 : Float(*, *, *, *, strides=[75264, 49, 7, 1], requires_grad=1, device=cuda:0) = onnx::Reshape[onnx_name="/layers.3/blocks/blocks.1/op/Reshape"](%/layers.3/blocks/blocks.1/op/Constant_3_output_0, %/layers.3/blocks/blocks.1/op/Concat_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:686:0
  %/layers.3/blocks/blocks.1/op/out_norm/Transpose_output_0 : Float(*, *, *, *, strides=[75264, 7, 1, 49], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Transpose"](%/layers.3/blocks/blocks.1/op/Reshape_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.3/blocks/blocks.1/op/out_norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.1/op/out_norm/ReduceMean"](%/layers.3/blocks/blocks.1/op/out_norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Sub_output_0 : Float(*, *, *, *, device=cpu) = onnx::Sub[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Sub"](%/layers.3/blocks/blocks.1/op/out_norm/Transpose_output_0, %/layers.3/blocks/blocks.1/op/out_norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Pow_output_0 : Float(*, *, *, *, device=cpu) = onnx::Pow[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Pow"](%/layers.3/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.3/blocks/blocks.1/op/out_norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.1/op/out_norm/ReduceMean_1"](%/layers.3/blocks/blocks.1/op/out_norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Add"](%/layers.3/blocks/blocks.1/op/out_norm/ReduceMean_1_output_0, %/layers.3/blocks/blocks.1/op/out_norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Sqrt"](%/layers.3/blocks/blocks.1/op/out_norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Div_output_0 : Float(*, *, *, *, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Div"](%/layers.3/blocks/blocks.1/op/out_norm/Sub_output_0, %/layers.3/blocks/blocks.1/op/out_norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Mul_output_0 : Float(*, *, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Mul"](%/layers.3/blocks/blocks.1/op/out_norm/Div_output_0, %layers.3.blocks.1.op.out_norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Add_1_output_0 : Float(*, *, *, *, strides=[75264, 10752, 1536, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Add_1"](%/layers.3/blocks/blocks.1/op/out_norm/Mul_output_0, %layers.3.blocks.1.op.out_norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/op/out_norm/Transpose_1_output_0 : Float(*, *, *, *, strides=[75264, 1, 10752, 1536], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.3/blocks/blocks.1/op/out_norm/Transpose_1"](%/layers.3/blocks/blocks.1/op/out_norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.LayerNorm2d::out_norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.1/op/Cast_output_0 : Float(*, *, *, *, strides=[75264, 1, 10752, 1536], requires_grad=1, device=cuda:0) = onnx::Cast[to=1, onnx_name="/layers.3/blocks/blocks.1/op/Cast"](%/layers.3/blocks/blocks.1/op/out_norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op # /home/test/code/VMamba-main/classification/models/vmamba.py:691:0
  %/layers.3/blocks/blocks.1/op/out_proj/Conv_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.1/op/out_proj/Conv"](%/layers.3/blocks/blocks.1/op/Cast_output_0, %onnx::Conv_1299), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.SS2D::op/models.vmamba.Linear2d::out_proj # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.1/Add_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/Add"](%/layers.3/blocks/blocks.0/Add_1_output_0, %/layers.3/blocks/blocks.1/op/out_proj/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1100:0
  %/layers.3/blocks/blocks.1/norm2/Transpose_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/layers.3/blocks/blocks.1/norm2/Transpose"](%/layers.3/blocks/blocks.1/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/layers.3/blocks/blocks.1/norm2/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.1/norm2/ReduceMean"](%/layers.3/blocks/blocks.1/norm2/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Sub_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Sub[onnx_name="/layers.3/blocks/blocks.1/norm2/Sub"](%/layers.3/blocks/blocks.1/norm2/Transpose_output_0, %/layers.3/blocks/blocks.1/norm2/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/layers.3/blocks/blocks.1/norm2/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Pow_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Pow[onnx_name="/layers.3/blocks/blocks.1/norm2/Pow"](%/layers.3/blocks/blocks.1/norm2/Sub_output_0, %/layers.3/blocks/blocks.1/norm2/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/layers.3/blocks/blocks.1/norm2/ReduceMean_1"](%/layers.3/blocks/blocks.1/norm2/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/layers.3/blocks/blocks.1/norm2/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/norm2/Add"](%/layers.3/blocks/blocks.1/norm2/ReduceMean_1_output_0, %/layers.3/blocks/blocks.1/norm2/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/layers.3/blocks/blocks.1/norm2/Sqrt"](%/layers.3/blocks/blocks.1/norm2/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Div_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.1/norm2/Div"](%/layers.3/blocks/blocks.1/norm2/Sub_output_0, %/layers.3/blocks/blocks.1/norm2/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Mul_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.1/norm2/Mul"](%/layers.3/blocks/blocks.1/norm2/Div_output_0, %layers.3.blocks.1.norm2.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Add_1_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/norm2/Add_1"](%/layers.3/blocks/blocks.1/norm2/Mul_output_0, %layers.3.blocks.1.norm2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/layers.3/blocks/blocks.1/norm2/Transpose_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/layers.3/blocks/blocks.1/norm2/Transpose_1"](%/layers.3/blocks/blocks.1/norm2/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.LayerNorm2d::norm2 # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/layers.3/blocks/blocks.1/mlp/fc1/Conv_output_0 : Float(*, 3072, *, *, strides=[150528, 1, 21504, 3072], requires_grad=0, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.1/mlp/fc1/Conv"](%/layers.3/blocks/blocks.1/norm2/Transpose_1_output_0, %onnx::Conv_1301, %layers.3.blocks.1.mlp.fc1.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc1 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.1/mlp/act/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1.41421}, onnx_name="/layers.3/blocks/blocks.1/mlp/act/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Div_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Div[onnx_name="/layers.3/blocks/blocks.1/mlp/act/Div"](%/layers.3/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.3/blocks/blocks.1/mlp/act/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Erf_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Erf[onnx_name="/layers.3/blocks/blocks.1/mlp/act/Erf"](%/layers.3/blocks/blocks.1/mlp/act/Div_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1}, onnx_name="/layers.3/blocks/blocks.1/mlp/act/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Add_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/mlp/act/Add"](%/layers.3/blocks/blocks.1/mlp/act/Erf_output_0, %/layers.3/blocks/blocks.1/mlp/act/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Mul_output_0 : Float(*, 3072, *, *, device=cpu) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.1/mlp/act/Mul"](%/layers.3/blocks/blocks.1/mlp/fc1/Conv_output_0, %/layers.3/blocks/blocks.1/mlp/act/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Constant_2_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={0.5}, onnx_name="/layers.3/blocks/blocks.1/mlp/act/Constant_2"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/act/Mul_1_output_0 : Float(*, 3072, *, *, strides=[150528, 1, 21504, 3072], requires_grad=1, device=cuda:0) = onnx::Mul[onnx_name="/layers.3/blocks/blocks.1/mlp/act/Mul_1"](%/layers.3/blocks/blocks.1/mlp/act/Mul_output_0, %/layers.3/blocks/blocks.1/mlp/act/Constant_2_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/torch.nn.modules.activation.GELU::act # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/activation.py:696:0
  %/layers.3/blocks/blocks.1/mlp/fc2/Conv_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1], onnx_name="/layers.3/blocks/blocks.1/mlp/fc2/Conv"](%/layers.3/blocks/blocks.1/mlp/act/Mul_1_output_0, %onnx::Conv_1303, %layers.3.blocks.1.mlp.fc2.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1/models.vmamba.Mlp::mlp/models.vmamba.Linear2d::fc2 # /home/test/code/VMamba-main/classification/models/vmamba.py:45:0
  %/layers.3/blocks/blocks.1/Add_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/layers.3/blocks/blocks.1/Add_1"](%/layers.3/blocks/blocks.1/Add_output_0, %/layers.3/blocks/blocks.1/mlp/fc2/Conv_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::layers.3/torch.nn.modules.container.Sequential::blocks/models.vmamba.VSSBlock::blocks.1 # /home/test/code/VMamba-main/classification/models/vmamba.py:1105:0
  %/classifier/norm/Transpose_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 2, 3, 1], onnx_name="/classifier/norm/Transpose"](%/layers.3/blocks/blocks.1/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:54:0
  %/classifier/norm/ReduceMean_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/classifier/norm/ReduceMean"](%/classifier/norm/Transpose_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Sub_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Sub[onnx_name="/classifier/norm/Sub"](%/classifier/norm/Transpose_output_0, %/classifier/norm/ReduceMean_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Constant_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={2}, onnx_name="/classifier/norm/Constant"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Pow_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Pow[onnx_name="/classifier/norm/Pow"](%/classifier/norm/Sub_output_0, %/classifier/norm/Constant_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/ReduceMean_1_output_0 : Float(*, *, *, 1, device=cpu) = onnx::ReduceMean[axes=[-1], onnx_name="/classifier/norm/ReduceMean_1"](%/classifier/norm/Pow_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Constant_1_output_0 : Float(requires_grad=0, device=cpu) = onnx::Constant[value={1e-05}, onnx_name="/classifier/norm/Constant_1"](), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Add_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Add[onnx_name="/classifier/norm/Add"](%/classifier/norm/ReduceMean_1_output_0, %/classifier/norm/Constant_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Sqrt_output_0 : Float(*, *, *, 1, device=cpu) = onnx::Sqrt[onnx_name="/classifier/norm/Sqrt"](%/classifier/norm/Add_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Div_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Div[onnx_name="/classifier/norm/Div"](%/classifier/norm/Sub_output_0, %/classifier/norm/Sqrt_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Mul_output_0 : Float(*, *, *, 768, device=cpu) = onnx::Mul[onnx_name="/classifier/norm/Mul"](%/classifier/norm/Div_output_0, %classifier.norm.weight), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Add_1_output_0 : Float(*, *, *, 768, strides=[37632, 5376, 768, 1], requires_grad=1, device=cuda:0) = onnx::Add[onnx_name="/classifier/norm/Add_1"](%/classifier/norm/Mul_output_0, %classifier.norm.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:2573:0
  %/classifier/norm/Transpose_1_output_0 : Float(*, 768, *, *, strides=[37632, 1, 5376, 768], requires_grad=1, device=cuda:0) = onnx::Transpose[perm=[0, 3, 1, 2], onnx_name="/classifier/norm/Transpose_1"](%/classifier/norm/Add_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/models.vmamba.LayerNorm2d::norm # /home/test/code/VMamba-main/classification/models/vmamba.py:56:0
  %/classifier/avgpool/GlobalAveragePool_output_0 : Float(*, 768, 1, 1, strides=[768, 1, 768, 768], requires_grad=1, device=cuda:0) = onnx::GlobalAveragePool[onnx_name="/classifier/avgpool/GlobalAveragePool"](%/classifier/norm/Transpose_1_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/torch.nn.modules.pooling.AdaptiveAvgPool2d::avgpool # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/functional.py:1260:0
  %/classifier/flatten/Flatten_output_0 : Float(*, 768, strides=[768, 1], requires_grad=1, device=cuda:0) = onnx::Flatten[axis=1, onnx_name="/classifier/flatten/Flatten"](%/classifier/avgpool/GlobalAveragePool_output_0), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/torch.nn.modules.flatten.Flatten::flatten # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/flatten.py:49:0
  %output : Float(*, 1000, strides=[1000, 1], requires_grad=1, device=cuda:0) = onnx::Gemm[alpha=1., beta=1., transB=1, onnx_name="/classifier/head/Gemm"](%/classifier/flatten/Flatten_output_0, %classifier.head.weight, %classifier.head.bias), scope: models.vmamba.VSSM::/torch.nn.modules.container.Sequential::classifier/torch.nn.modules.linear.Linear::head # /home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/nn/modules/linear.py:116:0
  return (%output)

shape of input:(128, 3, 224, 224)
[1;31m2024-05-28 04:23:17.575324480 [E:onnxruntime:, sequential_executor.cc:514 ExecuteKernel] Non-zero status code returned while running Reshape node. Name:'/layers.0/blocks/blocks.0/op/Reshape' Status Message: /croot/onnxruntime_1711063034809/work/onnxruntime/core/providers/cpu/tensor/reshape_helper.h:39 onnxruntime::ReshapeHelper::ReshapeHelper(const onnxruntime::TensorShape&, onnxruntime::TensorShapeVector&, bool) size != 0 && (input_shape_size % size) == 0 was false. The input tensor cannot be reshaped to the requested shape. Input shape:{1,192,3136}, requested shape:{128,-1,56,56}
[m
Exception ignored in: <function _MultiProcessingDataLoaderIter.__del__ at 0x7f94665e1670>
Traceback (most recent call last):
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1479, in __del__
    self._shutdown_workers()
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1443, in _shutdown_workers
    w.join(timeout=_utils.MP_STATUS_CHECK_INTERVAL)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/multiprocessing/popen_fork.py", line 44, in wait
    if not wait([self.sentinel], timeout):
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/multiprocessing/connection.py", line 931, in wait
    ready = selector.select(timeout)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 262671) is killed by signal: Aborted. 
[rank0]: Traceback (most recent call last):
[rank0]:   File "inference_lhk.py", line 398, in <module>
[rank0]:     main(config, args)
[rank0]:   File "inference_lhk.py", line 277, in main
[rank0]:     acc1, acc5, loss = validate_onnx(config, data_loader_val, "model_lhk.onnx")
[rank0]:   File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
[rank0]:     return func(*args, **kwargs)
[rank0]:   File "inference_lhk.py", line 206, in validate_onnx
[rank0]:     outputs = sess.run(output_fetch, input_feed)
[rank0]:   File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/onnxruntime/capi/onnxruntime_inference_collection.py", line 220, in run
[rank0]:     return self._sess.run(output_names, input_feed, run_options)
[rank0]: onnxruntime.capi.onnxruntime_pybind11_state.RuntimeException: [ONNXRuntimeError] : 6 : RUNTIME_EXCEPTION : Non-zero status code returned while running Reshape node. Name:'/layers.0/blocks/blocks.0/op/Reshape' Status Message: /croot/onnxruntime_1711063034809/work/onnxruntime/core/providers/cpu/tensor/reshape_helper.h:39 onnxruntime::ReshapeHelper::ReshapeHelper(const onnxruntime::TensorShape&, onnxruntime::TensorShapeVector&, bool) size != 0 && (input_shape_size % size) == 0 was false. The input tensor cannot be reshaped to the requested shape. Input shape:{1,192,3136}, requested shape:{128,-1,56,56}

/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/launch.py:183: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use-env is set by default in torchrun.
If your script expects `--local-rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
E0528 04:23:24.890241 140343354812224 torch/distributed/elastic/multiprocessing/api.py:826] failed (exitcode: 1) local_rank: 0 (pid: 262079) of binary: /home/test/anaconda3/envs/vmamba/bin/python
Traceback (most recent call last):
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/launch.py", line 198, in <module>
    main()
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/launch.py", line 194, in main
    launch(args)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/launch.py", line 179, in launch
    run(args)
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/run.py", line 870, in run
    elastic_launch(
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 132, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/test/anaconda3/envs/vmamba/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 263, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
inference_lhk.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-05-28_04:23:24
  host      : test
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 262079)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
